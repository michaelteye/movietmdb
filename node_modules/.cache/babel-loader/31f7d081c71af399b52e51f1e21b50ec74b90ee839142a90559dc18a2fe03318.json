{"ast":null,"code":"var _jsxFileName = \"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/profile.tsx\";\nimport React from 'react';\nimport MovieData from '../hooks/getMovies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  // const [movies, setMovies] = useState([]);\n  // const [totalMovies, setTotalMovies] = useState(0)\n\n  // const fetchData = async () => {\n  //   const uri = 'https://api.themoviedb.org/3/trending/all/day?language=en-US'\n  //   const options = {\n  //     method: 'GET',\n  //     headers: {\n  //       accept: 'application/json',\n  //       Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYjMyYTNhOTgxMDQzNzc3YzUyNjE4YTRmNmZhZjc1ZCIsInN1YiI6IjY0NzE5NWYzOTQwOGVjMDBjMjhlMzNhNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.TFNE-KUDbxeeR7hY0vXNAx_Q_gTQBzJCanXUpw51Hmg'\n  //     }\n  //   };\n  //   try {\n  //     const response = await fetch(\n  //       uri, options\n  //     );\n\n  //     if(response.ok){\n  //       // console.log('the information you provided is sucessfull')\n  //     }\n\n  //     if(!response.ok){\n  //       console.log('bad request please check your network tap for results')\n  //     }\n\n  //     if (!response.ok) {\n  //       throw new Error('Request failed');\n  //     }\n\n  //     const data = await response.json();\n  //     setMovies(data.results);\n  //     setTotalMovies(data.total_results)\n  //   } catch (error) {\n  //     console.error('Error fetching data:', error);\n  //   }\n  // };\n\n  const {\n    data,\n    error,\n    isLoading\n  } = MovieData();\n  if (isLoading) {\n    console.log('the loading process has started');\n  }\n  if (error) {\n    throw new Error('Check your system again');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.results.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Release Date: \", movie.release_date || movie.first_air_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The popularity is \", movie.popularity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), movie.poster_path && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n        alt: movie.title || movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","MovieData","jsxDEV","_jsxDEV","Profile","data","error","isLoading","console","log","Error","children","results","map","movie","title","fileName","_jsxFileName","lineNumber","columnNumber","release_date","first_air_date","popularity","poster_path","src","alt","name","id","_c","$RefreshReg$"],"sources":["/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/profile.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MovieData from '../hooks/getMovies';\n\nconst Profile = () => {\n  // const [movies, setMovies] = useState([]);\n  // const [totalMovies, setTotalMovies] = useState(0)\n\n  \n\n  // const fetchData = async () => {\n  //   const uri = 'https://api.themoviedb.org/3/trending/all/day?language=en-US'\n  //   const options = {\n  //     method: 'GET',\n  //     headers: {\n  //       accept: 'application/json',\n  //       Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYjMyYTNhOTgxMDQzNzc3YzUyNjE4YTRmNmZhZjc1ZCIsInN1YiI6IjY0NzE5NWYzOTQwOGVjMDBjMjhlMzNhNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.TFNE-KUDbxeeR7hY0vXNAx_Q_gTQBzJCanXUpw51Hmg'\n  //     }\n  //   };\n  //   try {\n  //     const response = await fetch(\n  //       uri, options\n  //     );\n\n  //     if(response.ok){\n  //       // console.log('the information you provided is sucessfull')\n  //     }\n\n  //     if(!response.ok){\n  //       console.log('bad request please check your network tap for results')\n  //     }\n\n  //     if (!response.ok) {\n  //       throw new Error('Request failed');\n  //     }\n\n  //     const data = await response.json();\n  //     setMovies(data.results);\n  //     setTotalMovies(data.total_results)\n  //   } catch (error) {\n  //     console.error('Error fetching data:', error);\n  //   }\n  // };\n\n\n  const {data, error, isLoading } =  MovieData()\n\n  if(isLoading){\n    console.log('the loading process has started')\n  }\n  if(error){\n    throw new Error('Check your system again')\n  }\n\n  return (\n    <div>\n      {/* <h4>The movie is {data.total_results}</h4> */}\n      {data.results.map((movie:any) => (\n        <div key={movie.id}>\n          <h2>{ movie.title }</h2>\n          <p>Release Date: {movie.release_date || movie.first_air_date}</p>\n          <p>The popularity is {movie.popularity}</p>\n          {movie.poster_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title || movie.name}\n            />\n          )}\n          {/* Include other movie details as needed */}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":";AAAA,OAAOA,KAAK,MAA+B,OAAO;AAClD,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB;EACA;;EAIA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,MAAM;IAACC,IAAI;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAIN,SAAS,CAAC,CAAC;EAE9C,IAAGM,SAAS,EAAC;IACXC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAChD;EACA,IAAGH,KAAK,EAAC;IACP,MAAM,IAAII,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEA,oBACEP,OAAA;IAAAQ,QAAA,EAEGN,IAAI,CAACO,OAAO,CAACC,GAAG,CAAEC,KAAS,iBAC1BX,OAAA;MAAAQ,QAAA,gBACER,OAAA;QAAAQ,QAAA,EAAMG,KAAK,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxBhB,OAAA;QAAAQ,QAAA,GAAG,gBAAc,EAACG,KAAK,CAACM,YAAY,IAAIN,KAAK,CAACO,cAAc;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjEhB,OAAA;QAAAQ,QAAA,GAAG,oBAAkB,EAACG,KAAK,CAACQ,UAAU;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC1CL,KAAK,CAACS,WAAW,iBAChBpB,OAAA;QACEqB,GAAG,EAAG,mCAAkCV,KAAK,CAACS,WAAY,EAAE;QAC5DE,GAAG,EAAEX,KAAK,CAACC,KAAK,IAAID,KAAK,CAACY;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CACF;IAAA,GATOL,KAAK,CAACa,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACS,EAAA,GArEIxB,OAAO;AAuEb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}