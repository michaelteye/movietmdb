{"ast":null,"code":"var _jsxFileName = \"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/LatestMovie.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport LatestTv from './Latest/LatestTv';\nimport LatestMovie from './Latest/LatestMovie';\nimport FetchTrendsQuery from '../hooks/getAllTrends';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LatestMovieTv() {\n  _s();\n  const [activeButton, setActiveButton] = useState('Movies');\n  const buttonStyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px]';\n  const buttonStyle1 = 'rounded bg-[#ffae06] text-white ml-2 my-2 px-2 text-center h-[30px] font-light text-[12px] w-[70px]';\n  const detailstyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px]';\n  const tvstyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px] w-[70px] justify-center';\n  const {\n    data: movies\n  } = FetchTrendsQuery;\n  const handleButton = ButtonName => {\n    setActiveButton(ButtonName);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"my-2 ml-2 text-white font-extrabold text-[24px]\",\n        children: \"LATEST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButton('Movies'),\n        className: activeButton === 'Movies' ? buttonStyle1 : buttonStyle,\n        children: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButton('Tv'),\n        className: activeButton === 'Tv' ? buttonStyle1 : tvstyle,\n        children: \"Tv SHow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pl-[780px]\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: detailstyle,\n            children: \"More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap\",\n      children: [activeButton === 'Movies' && /*#__PURE__*/_jsxDEV(LatestMovie, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 56\n      }, this), activeButton === 'Tv' && /*#__PURE__*/_jsxDEV(LatestTv, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}\n_s(LatestMovieTv, \"XNlc0VnK+dK7G03hRLN7J0V36Gc=\");\n_c = LatestMovieTv;\nvar _c;\n$RefreshReg$(_c, \"LatestMovieTv\");","map":{"version":3,"names":["React","useState","LatestTv","LatestMovie","FetchTrendsQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","LatestMovieTv","_s","activeButton","setActiveButton","buttonStyle","buttonStyle1","detailstyle","tvstyle","data","movies","handleButton","ButtonName","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","_c","$RefreshReg$"],"sources":["/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/LatestMovie.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport LatestTv from './Latest/LatestTv'\nimport LatestMovie from './Latest/LatestMovie'\nimport FetchTrendsQuery from '../hooks/getAllTrends'\n\nexport default function LatestMovieTv() {\n    const [activeButton, setActiveButton] = useState('Movies')\n\n    const buttonStyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px]'\n    const buttonStyle1 = 'rounded bg-[#ffae06] text-white ml-2 my-2 px-2 text-center h-[30px] font-light text-[12px] w-[70px]'\n    const detailstyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px]'\n    const tvstyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px] w-[70px] justify-center'\n    const {data:movies} = FetchTrendsQuery\n\n    const handleButton = (ButtonName:any)=>{\n        setActiveButton(ButtonName)\n    }\nreturn (\n        <>\n            <div className='flex'>\n                    <p className='my-2 ml-2 text-white font-extrabold text-[24px]'>LATEST</p>\n                    <button \n                    onClick={()=>handleButton('Movies')}\n                    className={activeButton === 'Movies' ? buttonStyle1 : buttonStyle}>Movies</button>\n                    <button\n                    onClick={()=>handleButton('Tv')}\n                    className={activeButton === 'Tv' ? buttonStyle1 : tvstyle }>Tv SHow</button>\n                        <div className='pl-[780px]'> \n                                <a href=\"\">\n                                    <button className={detailstyle}>\n                                        More\n                                    </button>\n                                </a>\n                        </div>\n            </div>\n                    <div className=\"flex flex-wrap\">\n                        { activeButton === 'Movies' && <LatestMovie/> }\n                        { activeButton === 'Tv' && <LatestTv/> }\n                    </div>\n        </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,gBAAgB,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,QAAQ,CAAC;EAE1D,MAAMY,WAAW,GAAG,gGAAgG;EACpH,MAAMC,YAAY,GAAG,qGAAqG;EAC1H,MAAMC,WAAW,GAAG,gGAAgG;EACpH,MAAMC,OAAO,GAAG,wHAAwH;EACxI,MAAM;IAACC,IAAI,EAACC;EAAM,CAAC,GAAGd,gBAAgB;EAEtC,MAAMe,YAAY,GAAIC,UAAc,IAAG;IACnCR,eAAe,CAACQ,UAAU,CAAC;EAC/B,CAAC;EACL,oBACQd,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACIf,OAAA;MAAKgB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACbf,OAAA;QAAGgB,SAAS,EAAC,iDAAiD;QAAAD,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACzEpB,OAAA;QACAqB,OAAO,EAAEA,CAAA,KAAIR,YAAY,CAAC,QAAQ,CAAE;QACpCG,SAAS,EAAEX,YAAY,KAAK,QAAQ,GAAGG,YAAY,GAAGD,WAAY;QAAAQ,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClFpB,OAAA;QACAqB,OAAO,EAAEA,CAAA,KAAIR,YAAY,CAAC,IAAI,CAAE;QAChCG,SAAS,EAAEX,YAAY,KAAK,IAAI,GAAGG,YAAY,GAAGE,OAAS;QAAAK,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxEpB,OAAA;QAAKgB,SAAS,EAAC,YAAY;QAAAD,QAAA,eACnBf,OAAA;UAAGsB,IAAI,EAAC,EAAE;UAAAP,QAAA,eACNf,OAAA;YAAQgB,SAAS,EAAEP,WAAY;YAAAM,QAAA,EAAC;UAEhC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACEpB,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,GACzBV,YAAY,KAAK,QAAQ,iBAAIL,OAAA,CAACH,WAAW;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAC3Cf,YAAY,KAAK,IAAI,iBAAIL,OAAA,CAACJ,QAAQ;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA,eAChB,CAAC;AAEX;AAAChB,EAAA,CApCuBD,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}