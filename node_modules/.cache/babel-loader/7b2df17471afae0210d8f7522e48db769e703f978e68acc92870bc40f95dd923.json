{"ast":null,"code":"// import React, { useState } from 'react'\n// import { Link, useNavigate } from 'react-router-dom'\n// import Login from './login'\n// import auth from '../firebase/firebase'\n// import { createUserWithEmailAndPassword, sendEmailVerification } from 'firebase/auth'\n// import { useAuthValue } from '../context/AuthContext'\n\n// export default function Signup() {\n\n//     const [isClick, setIsClick] = useState(false)\n//     const [email, setEmail ] = useState('')\n//     const [password, setPassword] = useState('')\n//     const [confirmPassword, setConfirmPassword] = useState('')\n//     const [error, setError] = useState('')\n//     const navigate = useNavigate()\n//     const { setTimeActive } = useAuthValue()\n\n//     const validatePassword = ()=>{\n//         let isValid = true\n//         if(password !== '' &&  confirmPassword !== ''){\n//             if(password !== confirmPassword){\n//                 isValid = false\n//                 setError('Password do not match, try again')\n//             }\n//         }\n//         return isValid\n//     }\n\n//     const HandleEmail = (e:React.FormEvent<HTMLInputElement>)=>{\n//         const target = e.target as HTMLInputElement\n//             setEmail(target.value)\n//     }\n\n//     const HandlePassword = (e:React.FormEvent<HTMLInputElement>)=>{\n//         const target = e.target as HTMLInputElement\n//             setPassword(target.value)\n//     }\n\n//     const HandleConfirmPassword = (e:React.FormEvent<HTMLInputElement>)=>{\n//         const target = e.target as HTMLInputElement\n//             setConfirmPassword(target.value)\n//     }\n\n//     // const register = async(e: React.FormEvent<HTMLFormElement>)=>{\n//     //     e.preventDefault()\n//     //     setError('')\n//     //     if(validatePassword()){\n//     //         try {\n//     //             const userCredential = await createUserWithEmailAndPassword(\n//     //               auth,\n//     //               email,\n//     //               password\n//     //             );\n//     //             await sendEmailVerification(userCredential.user);\n//     //             setTimeActive(true);\n//     //             navigate('/verify-email');\n//     //           } catch (err:any) {\n//     //             setError(err.message);\n//     //           }\n//     //     }\n//     //     setEmail('')\n//     //     setPassword('')\n//     //     setConfirmPassword('')\n//     // }\n//     // console.log(email,password,confirmPassword)\n\n//     const register = (e: React.FormEvent<HTMLFormElement>) => {\n//         e.preventDefault()\n//         setError('')\n//         if(validatePassword()) {\n//           // Create a new user with email and password using firebase\n//             createUserWithEmailAndPassword(auth, email, password)\n//             .then(() => {\n//               sendEmailVerification(auth.currentUser!)   \n//               .then(() => {\n//                 setTimeActive(true)\n//                 navigate('/verify-email')\n//               }).catch((err) => alert(err.message))\n//             })\n//             .catch(err => setError(err.message))\n//         }\n//         setEmail('')\n//         setPassword('')\n//         setConfirmPassword('')\n//       }\n\n//     const ToggleOnClick = ()=>{\n//         setIsClick(!isClick)\n//     }\n//   return (\n//     <>\n//     {isClick ? <Login/>:\n//     <div className=' bg-slate-300 h-screen'>\n\n//         <div className=\"w-full max-w-xs ml-[510px] pt-[150px] mb-0\">\n//             <form \n//             className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 w-[450px]\"\n//             onSubmit={register}\n//             />\n//                 <div className=\"mb-4\">\n//                     <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n//                         email\n//                     </label>\n//                     <input\n//                     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n//                     id=\"email\" \n//                     type=\"email\" \n//                     placeholder=\"example@gmail.com\"\n//                     onClick={HandleEmail}\n//                     />\n//                 </div>\n\n//                 <div className=\"mb-4\">\n//                     <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n//                         password\n//                     </label>\n//                     <input \n//                     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n//                     id=\"password\" \n//                     type=\"password\" \n//                     placeholder=\"*************************\" \n//                     onClick={HandlePassword}\n//                     />\n//                 </div>\n\n//                 <div className=\"mb-4\">\n//                     <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n//                         confirm password\n//                     </label>\n//                     <input \n//                     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n//                     id=\"password\"\n//                     type=\"password\"\n//                     placeholder=\"*************************\" \n//                     onClick={HandleConfirmPassword}\n//                     />\n//                 </div>\n//                 <div className=\"flex items-center justify-between\">\n//                     <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"submit\">\n//                         Sign up\n//                     </button>\n//                     <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\" href=\"#\">\n//                         Forgot Password?\n//                     </a>\n//                 </div>\n//                 <div className='py-2 ' onClick={ToggleOnClick}>\n//                     <p>Already have an account? <Link to='/login' className=' text-blue-400'>Sign in</Link></p>\n//                 </div>\n\n//             <p className=\"text-center text-gray-500 text-xs\">\n//                 &copy;2020 Acme Corp. All rights reserved.\n//             </p>\n//         </div>\n\n//     </div>\n// }\n\n//     </>\n//   )\n// }","map":{"version":3,"names":[],"sources":["/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/auth/signup.tsx"],"sourcesContent":["// import React, { useState } from 'react'\n// import { Link, useNavigate } from 'react-router-dom'\n// import Login from './login'\n// import auth from '../firebase/firebase'\n// import { createUserWithEmailAndPassword, sendEmailVerification } from 'firebase/auth'\n// import { useAuthValue } from '../context/AuthContext'\n\n\n// export default function Signup() {\n\n//     const [isClick, setIsClick] = useState(false)\n//     const [email, setEmail ] = useState('')\n//     const [password, setPassword] = useState('')\n//     const [confirmPassword, setConfirmPassword] = useState('')\n//     const [error, setError] = useState('')\n//     const navigate = useNavigate()\n//     const { setTimeActive } = useAuthValue()\n\n\n//     const validatePassword = ()=>{\n//         let isValid = true\n//         if(password !== '' &&  confirmPassword !== ''){\n//             if(password !== confirmPassword){\n//                 isValid = false\n//                 setError('Password do not match, try again')\n//             }\n//         }\n//         return isValid\n//     }\n\n//     const HandleEmail = (e:React.FormEvent<HTMLInputElement>)=>{\n//         const target = e.target as HTMLInputElement\n//             setEmail(target.value)\n//     }\n\n//     const HandlePassword = (e:React.FormEvent<HTMLInputElement>)=>{\n//         const target = e.target as HTMLInputElement\n//             setPassword(target.value)\n//     }\n\n//     const HandleConfirmPassword = (e:React.FormEvent<HTMLInputElement>)=>{\n//         const target = e.target as HTMLInputElement\n//             setConfirmPassword(target.value)\n//     }\n\n//     // const register = async(e: React.FormEvent<HTMLFormElement>)=>{\n//     //     e.preventDefault()\n//     //     setError('')\n//     //     if(validatePassword()){\n//     //         try {\n//     //             const userCredential = await createUserWithEmailAndPassword(\n//     //               auth,\n//     //               email,\n//     //               password\n//     //             );\n//     //             await sendEmailVerification(userCredential.user);\n//     //             setTimeActive(true);\n//     //             navigate('/verify-email');\n//     //           } catch (err:any) {\n//     //             setError(err.message);\n//     //           }\n//     //     }\n//     //     setEmail('')\n//     //     setPassword('')\n//     //     setConfirmPassword('')\n//     // }\n//     // console.log(email,password,confirmPassword)\n\n//     const register = (e: React.FormEvent<HTMLFormElement>) => {\n//         e.preventDefault()\n//         setError('')\n//         if(validatePassword()) {\n//           // Create a new user with email and password using firebase\n//             createUserWithEmailAndPassword(auth, email, password)\n//             .then(() => {\n//               sendEmailVerification(auth.currentUser!)   \n//               .then(() => {\n//                 setTimeActive(true)\n//                 navigate('/verify-email')\n//               }).catch((err) => alert(err.message))\n//             })\n//             .catch(err => setError(err.message))\n//         }\n//         setEmail('')\n//         setPassword('')\n//         setConfirmPassword('')\n//       }\n\n\n\n\n//     const ToggleOnClick = ()=>{\n//         setIsClick(!isClick)\n//     }\n//   return (\n//     <>\n//     {isClick ? <Login/>:\n//     <div className=' bg-slate-300 h-screen'>\n\n//         <div className=\"w-full max-w-xs ml-[510px] pt-[150px] mb-0\">\n//             <form \n//             className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 w-[450px]\"\n//             onSubmit={register}\n//             />\n//                 <div className=\"mb-4\">\n//                     <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n//                         email\n//                     </label>\n//                     <input\n//                     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n//                     id=\"email\" \n//                     type=\"email\" \n//                     placeholder=\"example@gmail.com\"\n//                     onClick={HandleEmail}\n//                     />\n//                 </div>\n            \n//                 <div className=\"mb-4\">\n//                     <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n//                         password\n//                     </label>\n//                     <input \n//                     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \n//                     id=\"password\" \n//                     type=\"password\" \n//                     placeholder=\"*************************\" \n//                     onClick={HandlePassword}\n//                     />\n//                 </div>\n\n//                 <div className=\"mb-4\">\n//                     <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n//                         confirm password\n//                     </label>\n//                     <input \n//                     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n//                     id=\"password\"\n//                     type=\"password\"\n//                     placeholder=\"*************************\" \n//                     onClick={HandleConfirmPassword}\n//                     />\n//                 </div>\n//                 <div className=\"flex items-center justify-between\">\n//                     <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\" type=\"submit\">\n//                         Sign up\n//                     </button>\n//                     <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\" href=\"#\">\n//                         Forgot Password?\n//                     </a>\n//                 </div>\n//                 <div className='py-2 ' onClick={ToggleOnClick}>\n//                     <p>Already have an account? <Link to='/login' className=' text-blue-400'>Sign in</Link></p>\n//                 </div>\n            \n          \n//             <p className=\"text-center text-gray-500 text-xs\">\n//                 &copy;2020 Acme Corp. All rights reserved.\n//             </p>\n//         </div>\n\n//     </div>\n// }\n\n//     </>\n//   )\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}