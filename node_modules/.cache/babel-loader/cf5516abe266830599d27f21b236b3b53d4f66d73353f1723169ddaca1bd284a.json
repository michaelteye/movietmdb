{"ast":null,"code":"var _jsxFileName = \"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/detailPage/InteractiveCommentsSection.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport CommentCard from \"../../components/layouts/comments/commentCard\";\nimport NewCommentCard from \"../../components/layouts/comments/mentions/NewCommentCard\";\nimport commentsData from '../../assets/data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InteractiveCommentsSection = () => {\n  _s();\n  const {\n    comments: commentsExternal,\n    currentUser\n  } = commentsData;\n  const [comments, setComments] = React.useState(commentsExternal);\n  const getNewId = () => {\n    const replies = comments.filter(comment => comment.replies && comment.replies.length > 0).map(comment => comment.replies);\n    const ids = comments.concat(...replies).map(comment => comment.id);\n    const maxId = Math.max(...ids);\n    return maxId + 1;\n  };\n  const addComment = content => {\n    const newId = getNewId();\n    const commentData = {\n      id: newId,\n      content,\n      createdAt: +new Date() / 1000,\n      replies: [],\n      score: 0,\n      user: currentUser\n    };\n    setComments([...comments, commentData]);\n  };\n  const updateComment = (commentId, data) => {\n    const {\n      content,\n      score,\n      updateReply,\n      addReply,\n      replyingTo,\n      replies\n    } = data;\n    const updatedComments = [...comments];\n    if (updateReply) {\n      const commentIndex = updatedComments.findIndex(comment => comment.replies && comment.replies.length > 0 && comment.replies.find(reply => reply.id === commentId));\n      const replyIndex = updatedComments[commentIndex].replies.findIndex(reply => reply.id === commentId);\n      if (content) {\n        updatedComments[commentIndex].replies[replyIndex].content = content;\n      }\n      if (score) {\n        updatedComments[commentIndex].replies[replyIndex].score = score;\n      }\n    } else if (addReply) {\n      const newId = getNewId();\n      const replyData = {\n        parentId: replyingTo.id,\n        id: newId,\n        content: content || \"\",\n        createdAt: +new Date() / 1000,\n        replyingTo: replyingTo.username,\n        score: 0,\n        user: currentUser,\n        replies: []\n      };\n      updatedComments.forEach(comment => {\n        if (comment.id === commentId || comment.id === replyingTo.id) {\n          comment.replies = [...comment.replies, replyData];\n        }\n      });\n      setComments(updatedComments);\n    } else {\n      const index = comments.findIndex(comment => comment.id === commentId);\n      if (content) {\n        updatedComments[index].content = content;\n      }\n      if (score) {\n        updatedComments[index].score = score;\n      }\n    }\n    setComments(updatedComments);\n  };\n  const deleteComment = (commentId, parentId) => {\n    let updatedComments = [...comments];\n    if (parentId) {\n      const commentIndex = updatedComments.findIndex(comment => comment.id === parentId);\n      const filteredReplies = updatedComments[commentIndex].replies.filter(reply => reply.id !== commentId);\n      updatedComments[commentIndex].replies = filteredReplies;\n    } else {\n      const filtered = updatedComments.filter(comment => comment.id !== commentId);\n      updatedComments = filtered;\n    }\n    setComments(updatedComments);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interactive-comments-section pt-24 sm:px-24 px-8 bg-black h-full py-12 flex flex-col\",\n      children: [comments.map(comment => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CommentCard, {\n          comment: comment,\n          currentUser: currentUser,\n          updateComment: updateComment,\n          deleteComment: deleteComment\n        }, `${comment.id} ${comment.user.username}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), comment.replies && comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" sm:pl-10 sm:ml-10 ml-0 mb-4 pl-5\",\n          children: comment.replies.map(reply => /*#__PURE__*/_jsxDEV(CommentCard, {\n            comment: reply,\n            currentUser: currentUser,\n            updateComment: (replyId, data) => {\n              updateComment(replyId, {\n                updateReply: !data.addReply,\n                ...data\n              });\n            },\n            deleteComment: deleteComment\n          }, `${reply.id} ${reply.user.username}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(NewCommentCard, {\n        currentUser: currentUser,\n        onAdd: addComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(InteractiveCommentsSection, \"lhsc63qGKHJSBkFT1pYssozCwJw=\");\n_c = InteractiveCommentsSection;\nexport default InteractiveCommentsSection;\nvar _c;\n$RefreshReg$(_c, \"InteractiveCommentsSection\");","map":{"version":3,"names":["React","CommentCard","NewCommentCard","commentsData","jsxDEV","_jsxDEV","Fragment","_Fragment","InteractiveCommentsSection","_s","comments","commentsExternal","currentUser","setComments","useState","getNewId","replies","filter","comment","length","map","ids","concat","id","maxId","Math","max","addComment","content","newId","commentData","createdAt","Date","score","user","updateComment","commentId","data","updateReply","addReply","replyingTo","updatedComments","commentIndex","findIndex","find","reply","replyIndex","replyData","parentId","username","forEach","index","deleteComment","filteredReplies","filtered","children","className","fileName","_jsxFileName","lineNumber","columnNumber","replyId","onAdd","_c","$RefreshReg$"],"sources":["/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/detailPage/InteractiveCommentsSection.tsx"],"sourcesContent":["import React from \"react\";\nimport CommentCard from \"../../components/layouts/comments/commentCard\";\nimport NewCommentCard from \"../../components/layouts/comments/mentions/NewCommentCard\";\nimport commentsData from '../../assets/data.json'\n\n\ninterface User {\n  username: string;\n  // Add any other properties related to the user object\n}\n\ninterface Comment {\n  id: number;\n  parentId?: number;\n  content: string;\n  createdAt: number;\n  replyingTo?: string;\n  score: number;\n  user: User;\n  replies: Comment[];\n}\n\ninterface InteractiveCommentsSectionProps {\n  // Add any props if required\n}\n\nconst InteractiveCommentsSection: React.FC<InteractiveCommentsSectionProps> = () => {\n  const { comments: commentsExternal, currentUser } = commentsData;\n  const [comments, setComments] = React.useState<Comment[]>(commentsExternal);\n\n  const getNewId = (): number => {\n    const replies = comments\n      .filter((comment) => comment.replies && comment.replies.length > 0)\n      .map((comment) => comment.replies);\n    const ids = comments.concat(...replies).map((comment) => comment.id);\n\n    const maxId = Math.max(...ids);\n    return maxId + 1;\n  };\n\n  const addComment = (content: string): void => {\n    const newId = getNewId();\n    const commentData: Comment = {\n      id: newId,\n      content,\n      createdAt: +new Date() / 1000,\n      replies: [],\n      score: 0,\n      user: currentUser,\n    };\n\n    setComments([...comments, commentData]);\n  };\n\n  const updateComment = (commentId: number, data: any): void => {\n    const { content, score, updateReply, addReply, replyingTo, replies } = data;\n    const updatedComments = [...comments];\n\n    if (updateReply) {\n      const commentIndex = updatedComments.findIndex(\n        (comment) =>\n          comment.replies &&\n          comment.replies.length > 0 &&\n          comment.replies.find((reply) => reply.id === commentId)\n      );\n\n      const replyIndex = updatedComments[commentIndex].replies.findIndex(\n        (reply) => reply.id === commentId\n      );\n\n      if (content) {\n        updatedComments[commentIndex].replies[replyIndex].content = content;\n      }\n\n      if (score) {\n        updatedComments[commentIndex].replies[replyIndex].score = score;\n      }\n    } else if (addReply) {\n      const newId = getNewId();\n\n      const replyData: Comment = {\n        parentId: replyingTo.id,\n        id: newId,\n        content: content || \"\",\n        createdAt: +new Date() / 1000,\n        replyingTo: replyingTo.username,\n        score: 0,\n        user: currentUser,\n        replies: [],\n      };\n\n      updatedComments.forEach((comment) => {\n        if (comment.id === commentId || comment.id === replyingTo.id) {\n          comment.replies = [...comment.replies, replyData];\n        }\n      });\n      setComments(updatedComments);\n    } else {\n      const index = comments.findIndex((comment) => comment.id === commentId);\n\n      if (content) {\n        updatedComments[index].content = content;\n      }\n\n      if (score) {\n        updatedComments[index].score = score;\n      }\n    }\n\n    setComments(updatedComments);\n  };\n\n  const deleteComment = (commentId: number, parentId?: number): void => {\n    let updatedComments = [...comments];\n\n    if (parentId) {\n      const commentIndex = updatedComments.findIndex(\n        (comment) => comment.id === parentId\n      );\n\n      const filteredReplies = updatedComments[commentIndex].replies.filter(\n        (reply) => reply.id !== commentId\n      );\n\n      updatedComments[commentIndex].replies = filteredReplies;\n    } else {\n      const filtered = updatedComments.filter(\n        (comment) => comment.id !== commentId\n      );\n      updatedComments = filtered;\n    }\n\n    setComments(updatedComments);\n  };\n\n  return (\n    <>\n      <div className=\"interactive-comments-section pt-24 sm:px-24 px-8 bg-black h-full py-12 flex flex-col\">\n       \n\n        {comments.map((comment) => (\n          <React.Fragment key={comment.id}>\n            <CommentCard\n              key={`${comment.id} ${comment.user.username}`}\n              comment={comment}\n              currentUser={currentUser}\n              updateComment={updateComment}\n              deleteComment={deleteComment}\n            />\n            {comment.replies && comment.replies.length > 0 && (\n              <div className=\" sm:pl-10 sm:ml-10 ml-0 mb-4 pl-5\">\n                {comment.replies.map((reply) => (\n                  <CommentCard\n                    key={`${reply.id} ${reply.user.username}`}\n                    comment={reply}\n                    currentUser={currentUser}\n                    updateComment={(replyId:any, data:any) => {\n                      updateComment(replyId, {\n                        updateReply: !data.addReply,\n                        ...data,\n                      });\n                    }}\n                    deleteComment={deleteComment}\n                  />\n                ))}\n              </div>\n            )}\n          </React.Fragment>\n        ))}\n\n        <NewCommentCard currentUser={currentUser} onAdd={addComment} />\n      </div>\n    </>\n  );\n};\n\nexport default InteractiveCommentsSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}