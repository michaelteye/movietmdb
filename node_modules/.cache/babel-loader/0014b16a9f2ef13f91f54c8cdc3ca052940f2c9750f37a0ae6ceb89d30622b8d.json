{"ast":null,"code":"var _jsxFileName = \"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/NewReleased/NewReleased.tsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import Year from '../../dashboard/Radios/year';\n// import Country from '../../dashboard/Radios/country';\n// import Genre from '../../dashboard/Radios/genre';\n// import Quality from '../../dashboard/Radios/quality';\n// import Rating from '../../dashboard/Radios/rating';\n// import Release from '../../dashboard/Radios/release';\n// import Type from '../../dashboard/Radios/type';\n// import Loader from \"react-loader-spinner\";\n// import FetchPaginateUpComingQuery from '../../hooks/pagenateUpcoming';\n// import FetchTrendsQuery from '../../hooks/getAllTrends';\n// import ReactPaginate from 'react-paginate';\n// import { Link } from 'react-router-dom';\n\n// export default function NewReleased({handleMouseOver, handleMouseOut }:{handleMouseOver:any; handleMouseOut:any}) {\n//   const [isOpen, setIsopen] = useState(false);\n//   const [activeDropdown, setActiveDropdown] = useState('');\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [pageCount, setpageCount] = useState(0)\n//   const [isHovering, setIsHovering] = useState(false);\n\n//   const { data, isLoading, isError:errorMessage } = FetchPaginateUpComingQuery(currentPage);\n//   const { data: movies } = FetchTrendsQuery();\n//   const moviesData = data?.data || [];\n//   const pageCounts = data?.pageCount || 0;\n\n//   const handlePageChange = (selectedPage:any) => {\n//     const pageNumber = selectedPage.selected + 1;\n//     console.log(pageNumber)\n//     setCurrentPage(pageNumber);\n//   };\n\n//   const styleComponent = \"mr-1 text-white bg-filterColor  h-[30px] hover:bg-changeColor focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\";\n//   // const buttonStyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px]';\n\n//   const toggleDropdown = (dropdownName:any) => {\n//     if (activeDropdown === dropdownName) {\n//       setActiveDropdown('');\n//     } else {\n//       setActiveDropdown(dropdownName);\n//       console.log('activeDropdown is >>>', activeDropdown);\n//     }\n//   };\n\n//   return (\n//     <div className='bg-[#020916] pt-10'>\n//       <p>NEW RELEASE</p>\n//       <div className='flex flex-wrap'>\n//         <div className='w-3/4'>\n//           <div className='flex pl-2'>\n//             <div className=' h-[30px] '>\n//               <input\n//                 type=\"text\"\n//                 placeholder='search...'\n//                 className='text-[#605f62] bg-[#1a212d] w-[120px] rounded mr-2 h-[30px] text-center'\n//               />\n//             </div>\n//             <Year isOpen={activeDropdown === 'year'} onToggle={() => toggleDropdown('year')} style={styleComponent} />\n//             <Country isOpen={activeDropdown === 'country'} onToggle={() => toggleDropdown('country')} style={styleComponent} />\n//             <Genre isOpen={activeDropdown === 'genre'} onToggle={() => toggleDropdown('genre')} style={styleComponent} />\n//             <Quality isOpen={activeDropdown === 'quality'} onToggle={() => toggleDropdown('quality')} style={styleComponent} />\n//             <Rating isOpen={activeDropdown === 'rating'} onToggle={() => toggleDropdown('rating')} style={styleComponent} />\n//             <Release isOpen={activeDropdown === 'release'} onToggle={() => toggleDropdown('release')} style={styleComponent} />\n//             <Type isOpen={activeDropdown === 'type'} onToggle={() => toggleDropdown('type')} style={styleComponent} />\n//             <button\n//               data-dropdown-toggle=\"dropdownDefaultRadio\"\n//               className=\"tex-black bg-[#ffae06] h-[30px] ml-1\n//               font-medium rounded-lg text-sm px-4 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n//               type=\"button\"\n//             >\n//               filter\n//               <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-4 h-4 ml-4\">\n//                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99\" />\n//               </svg>\n//             </button>\n//           </div>\n\n//           <div className=\"flex flex-wrap\" >\n//             {isLoading ? (\n//               '.......'\n//             ) : (\n//               <>\n//               {/* page movie */}\n//                 {moviesData && moviesData.map((movie:any) => (\n//                   <div key={movie.id} className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 hover:bg-radientColor \" onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\n//                     <Link to={`/movie/${movie.id}`} >\n//                       <img className=\"w-full h-auto\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title}/>\n//                     </Link>\n//                     <p className='pt-2 pl-2 truncate text-white'>{movie.title || movie.name}</p>\n//                   </div>\n//                 ))}\n//               </>\n//             )}\n\n//           </div>\n\n//           <div className=\"  mt-4 inline-flex -space-x-px\">\n//           <ReactPaginate\n//             previousLabel={'Previous'}\n//             nextLabel={'Next'}\n//             breakLabel={'.....'}\n//             breakClassName='px-2 bg-white w-[45px] text-center'\n//             pageCount={pageCounts}\n//             marginPagesDisplayed={2}\n//             pageRangeDisplayed={5}\n//             onPageChange={handlePageChange}\n//             nextClassName = 'px-3 py-2 ml-4 leading-tight text-gray-500 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'\n//             containerClassName=\"bg-black inline-flex space-x-px  rounded ml-[500px] mb-4\"\n//             activeClassName='bg-yellow-400 text-white'\n//             previousClassName=\"px-3 py-2 mr-0 leading-tight text-gray-500 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\"\n//             pageClassName=\"px-3 py-2 pl-4 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\"\n//             />\n//           </div>\n//         </div>\n\n//         <div className=\"w-1/4\">\n//           <div className=\"h-full\">\n//             {/* Place your text content here */}\n//             <div className='flex pt-[210px] pl-[5px] font-extrabold'>\n//               <p className='pl-4 text-white font-extrabold text-[24px]'>UPDATED</p>\n//               <div className=' ml-10 text-center pl-[70px]'>\n//                 <button className=' w-[70px] text-center text-[#605f62] h-[30px] bg-[#1a212d] rounded-md flex pl-[9px] font-medium text-[12px] pt-[5px]'>\n//                   More\n//                   <span>\n//                     <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"28\" viewBox=\"0 -960 960 960\" width=\"28\" className='pb-2 text-base font-semibold'>\n//                       <path d=\"m375-240-43-43 198-198-198-198 43-43 241 241-241 241Z\" />\n//                     </svg>\n//                   </span>\n//                   <span className='bg-red-400'></span>\n//                 </button>\n//               </div>\n//             </div>\n//             {/* The code on the update part */}\n//             <div className='pl-[5px] pt-[65px] '>\n//               {movies && movies.slice(0, 9).map((movie:any) => (\n//                 <div className=\"flex-col w-[280px] h-[70px] mt-[2px] bg-[#020916] text-white  border-2 border-zinc-700 border-solid rounded-md \">\n//                   <div className='flex'>\n//                     <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt=\"\" className='w-10 h-[60px] md:32 pl-2 pt-2 rounded-md text-center' />\n//                     <p className='pt-2 pl-2 truncate'>{movie.title || movie.name}</p>\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\nimport React, { useState } from 'react';\nimport FetchPaginateUpComingQuery from '../../hooks/pagenateUpcoming';\nimport FetchTrendsQuery from '../../hooks/getAllTrends';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewReleased(_ref) {\n  _s();\n  let {\n    handleMouseOver,\n    handleMouseOut\n  } = _ref;\n  const [isOpen, setIsopen] = useState(false);\n  const [activeDropdown, setActiveDropdown] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageCount, setpageCount] = useState(0);\n  const [isHovering, setIsHovering] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [hoveredMovie, setHoveredMovie] = useState(null);\n  const {\n    data,\n    isLoading,\n    isError: errorMessage\n  } = FetchPaginateUpComingQuery(currentPage);\n  const {\n    data: movies\n  } = FetchTrendsQuery();\n  const moviesData = (data === null || data === void 0 ? void 0 : data.data) || [];\n  const pageCounts = (data === null || data === void 0 ? void 0 : data.pageCount) || 0;\n  const handlePageChange = selectedPage => {\n    const pageNumber = selectedPage.selected + 1;\n    console.log(pageNumber);\n    setCurrentPage(pageNumber);\n  };\n  const toggleDropdown = dropdownName => {\n    if (activeDropdown === dropdownName) {\n      setActiveDropdown('');\n    } else {\n      setActiveDropdown(dropdownName);\n      console.log('activeDropdown is >>>', activeDropdown);\n    }\n  };\n  const handleMovieMouseEnter = movie => {\n    setHoveredMovie(movie);\n    setIsModalVisible(true);\n  };\n  const handleMovieMouseLeave = () => {\n    setHoveredMovie(null);\n    setIsModalVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#020916] pt-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NEW RELEASE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-3/4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap\",\n          children: isLoading ? '.......' : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: moviesData && moviesData.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 hover:bg-radientColor\",\n              onMouseEnter: () => handleMovieMouseEnter(movie),\n              onMouseLeave: handleMovieMouseLeave,\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/movie/${movie.id}`,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"w-full h-auto\",\n                  src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n                  alt: movie.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"pt-2 pl-2 truncate text-white\",\n                children: movie.title || movie.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 23\n              }, this)]\n            }, movie.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this))\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), isModalVisible && hoveredMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 left-0 right-0 bottom-0 bg-black bg-opacity-75 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold\",\n          children: hoveredMovie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: hoveredMovie.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(NewReleased, \"4Cqw1azXVclBxPTgtcKpaa74n+c=\");\n_c = NewReleased;\nvar _c;\n$RefreshReg$(_c, \"NewReleased\");","map":{"version":3,"names":["React","useState","FetchPaginateUpComingQuery","FetchTrendsQuery","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","NewReleased","_ref","_s","handleMouseOver","handleMouseOut","isOpen","setIsopen","activeDropdown","setActiveDropdown","currentPage","setCurrentPage","pageCount","setpageCount","isHovering","setIsHovering","isModalVisible","setIsModalVisible","hoveredMovie","setHoveredMovie","data","isLoading","isError","errorMessage","movies","moviesData","pageCounts","handlePageChange","selectedPage","pageNumber","selected","console","log","toggleDropdown","dropdownName","handleMovieMouseEnter","movie","handleMovieMouseLeave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onMouseEnter","onMouseLeave","to","id","src","poster_path","alt","title","name","description","_c","$RefreshReg$"],"sources":["/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/NewReleased/NewReleased.tsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import Year from '../../dashboard/Radios/year';\n// import Country from '../../dashboard/Radios/country';\n// import Genre from '../../dashboard/Radios/genre';\n// import Quality from '../../dashboard/Radios/quality';\n// import Rating from '../../dashboard/Radios/rating';\n// import Release from '../../dashboard/Radios/release';\n// import Type from '../../dashboard/Radios/type';\n// import Loader from \"react-loader-spinner\";\n// import FetchPaginateUpComingQuery from '../../hooks/pagenateUpcoming';\n// import FetchTrendsQuery from '../../hooks/getAllTrends';\n// import ReactPaginate from 'react-paginate';\n// import { Link } from 'react-router-dom';\n\n// export default function NewReleased({handleMouseOver, handleMouseOut }:{handleMouseOver:any; handleMouseOut:any}) {\n//   const [isOpen, setIsopen] = useState(false);\n//   const [activeDropdown, setActiveDropdown] = useState('');\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [pageCount, setpageCount] = useState(0)\n//   const [isHovering, setIsHovering] = useState(false);\n\n//   const { data, isLoading, isError:errorMessage } = FetchPaginateUpComingQuery(currentPage);\n//   const { data: movies } = FetchTrendsQuery();\n//   const moviesData = data?.data || [];\n//   const pageCounts = data?.pageCount || 0;\n\n//   const handlePageChange = (selectedPage:any) => {\n//     const pageNumber = selectedPage.selected + 1;\n//     console.log(pageNumber)\n//     setCurrentPage(pageNumber);\n//   };\n\n\n\n\n\n\n//   const styleComponent = \"mr-1 text-white bg-filterColor  h-[30px] hover:bg-changeColor focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\";\n//   // const buttonStyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px]';\n\n//   const toggleDropdown = (dropdownName:any) => {\n//     if (activeDropdown === dropdownName) {\n//       setActiveDropdown('');\n//     } else {\n//       setActiveDropdown(dropdownName);\n//       console.log('activeDropdown is >>>', activeDropdown);\n//     }\n//   };\n\n//   return (\n//     <div className='bg-[#020916] pt-10'>\n//       <p>NEW RELEASE</p>\n//       <div className='flex flex-wrap'>\n//         <div className='w-3/4'>\n//           <div className='flex pl-2'>\n//             <div className=' h-[30px] '>\n//               <input\n//                 type=\"text\"\n//                 placeholder='search...'\n//                 className='text-[#605f62] bg-[#1a212d] w-[120px] rounded mr-2 h-[30px] text-center'\n//               />\n//             </div>\n//             <Year isOpen={activeDropdown === 'year'} onToggle={() => toggleDropdown('year')} style={styleComponent} />\n//             <Country isOpen={activeDropdown === 'country'} onToggle={() => toggleDropdown('country')} style={styleComponent} />\n//             <Genre isOpen={activeDropdown === 'genre'} onToggle={() => toggleDropdown('genre')} style={styleComponent} />\n//             <Quality isOpen={activeDropdown === 'quality'} onToggle={() => toggleDropdown('quality')} style={styleComponent} />\n//             <Rating isOpen={activeDropdown === 'rating'} onToggle={() => toggleDropdown('rating')} style={styleComponent} />\n//             <Release isOpen={activeDropdown === 'release'} onToggle={() => toggleDropdown('release')} style={styleComponent} />\n//             <Type isOpen={activeDropdown === 'type'} onToggle={() => toggleDropdown('type')} style={styleComponent} />\n//             <button\n//               data-dropdown-toggle=\"dropdownDefaultRadio\"\n//               className=\"tex-black bg-[#ffae06] h-[30px] ml-1\n//               font-medium rounded-lg text-sm px-4 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n//               type=\"button\"\n//             >\n//               filter\n//               <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\" className=\"w-4 h-4 ml-4\">\n//                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99\" />\n//               </svg>\n//             </button>\n//           </div>\n\n//           <div className=\"flex flex-wrap\" >\n//             {isLoading ? (\n//               '.......'\n//             ) : (\n//               <>\n//               {/* page movie */}\n//                 {moviesData && moviesData.map((movie:any) => (\n//                   <div key={movie.id} className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 hover:bg-radientColor \" onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\n//                     <Link to={`/movie/${movie.id}`} >\n//                       <img className=\"w-full h-auto\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title}/>\n//                     </Link>\n//                     <p className='pt-2 pl-2 truncate text-white'>{movie.title || movie.name}</p>\n//                   </div>\n//                 ))}\n//               </>\n//             )}\n            \n//           </div>\n\n//           <div className=\"  mt-4 inline-flex -space-x-px\">\n//           <ReactPaginate\n//             previousLabel={'Previous'}\n//             nextLabel={'Next'}\n//             breakLabel={'.....'}\n//             breakClassName='px-2 bg-white w-[45px] text-center'\n//             pageCount={pageCounts}\n//             marginPagesDisplayed={2}\n//             pageRangeDisplayed={5}\n//             onPageChange={handlePageChange}\n//             nextClassName = 'px-3 py-2 ml-4 leading-tight text-gray-500 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white'\n//             containerClassName=\"bg-black inline-flex space-x-px  rounded ml-[500px] mb-4\"\n//             activeClassName='bg-yellow-400 text-white'\n//             previousClassName=\"px-3 py-2 mr-0 leading-tight text-gray-500 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\"\n//             pageClassName=\"px-3 py-2 pl-4 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\"\n//             />\n//           </div>\n//         </div>\n\n//         <div className=\"w-1/4\">\n//           <div className=\"h-full\">\n//             {/* Place your text content here */}\n//             <div className='flex pt-[210px] pl-[5px] font-extrabold'>\n//               <p className='pl-4 text-white font-extrabold text-[24px]'>UPDATED</p>\n//               <div className=' ml-10 text-center pl-[70px]'>\n//                 <button className=' w-[70px] text-center text-[#605f62] h-[30px] bg-[#1a212d] rounded-md flex pl-[9px] font-medium text-[12px] pt-[5px]'>\n//                   More\n//                   <span>\n//                     <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"28\" viewBox=\"0 -960 960 960\" width=\"28\" className='pb-2 text-base font-semibold'>\n//                       <path d=\"m375-240-43-43 198-198-198-198 43-43 241 241-241 241Z\" />\n//                     </svg>\n//                   </span>\n//                   <span className='bg-red-400'></span>\n//                 </button>\n//               </div>\n//             </div>\n//             {/* The code on the update part */}\n//             <div className='pl-[5px] pt-[65px] '>\n//               {movies && movies.slice(0, 9).map((movie:any) => (\n//                 <div className=\"flex-col w-[280px] h-[70px] mt-[2px] bg-[#020916] text-white  border-2 border-zinc-700 border-solid rounded-md \">\n//                   <div className='flex'>\n//                     <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt=\"\" className='w-10 h-[60px] md:32 pl-2 pt-2 rounded-md text-center' />\n//                     <p className='pt-2 pl-2 truncate'>{movie.title || movie.name}</p>\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\nimport React, { useEffect, useState } from 'react';\nimport Year from '../../dashboard/Radios/year';\nimport Country from '../../dashboard/Radios/country';\nimport Genre from '../../dashboard/Radios/genre';\nimport Quality from '../../dashboard/Radios/quality';\nimport Rating from '../../dashboard/Radios/rating';\nimport Release from '../../dashboard/Radios/release';\nimport Type from '../../dashboard/Radios/type';\nimport Loader from \"react-loader-spinner\";\nimport FetchPaginateUpComingQuery from '../../hooks/pagenateUpcoming';\nimport FetchTrendsQuery from '../../hooks/getAllTrends';\nimport ReactPaginate from 'react-paginate';\nimport { Link } from 'react-router-dom';\n\nexport default function NewReleased({ handleMouseOver, handleMouseOut }: { handleMouseOver: any; handleMouseOut: any }) {\n  const [isOpen, setIsopen] = useState(false);\n  const [activeDropdown, setActiveDropdown] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageCount, setpageCount] = useState(0);\n  const [isHovering, setIsHovering] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [hoveredMovie, setHoveredMovie] = useState(null);\n\n  const { data, isLoading, isError: errorMessage } = FetchPaginateUpComingQuery(currentPage);\n  const { data: movies } = FetchTrendsQuery();\n  const moviesData = data?.data || [];\n  const pageCounts = data?.pageCount || 0;\n\n  const handlePageChange = (selectedPage: any) => {\n    const pageNumber = selectedPage.selected + 1;\n    console.log(pageNumber);\n    setCurrentPage(pageNumber);\n  };\n\n  const toggleDropdown = (dropdownName: any) => {\n    if (activeDropdown === dropdownName) {\n      setActiveDropdown('');\n    } else {\n      setActiveDropdown(dropdownName);\n      console.log('activeDropdown is >>>', activeDropdown);\n    }\n  };\n\n  const handleMovieMouseEnter = (movie: any) => {\n    setHoveredMovie(movie);\n    setIsModalVisible(true);\n  };\n\n  const handleMovieMouseLeave = () => {\n    setHoveredMovie(null);\n    setIsModalVisible(false);\n  };\n\n  return (\n    <div className='bg-[#020916] pt-10'>\n      <p>NEW RELEASE</p>\n      <div className='flex flex-wrap'>\n        <div className='w-3/4'>\n          {/* Filter section */}\n          {/* ... */}\n\n          <div className=\"flex flex-wrap\">\n            {isLoading ? (\n              '.......'\n            ) : (\n              <>\n                {/* Movie grid */}\n                {moviesData &&\n                  moviesData.map((movie: any) => (\n                    <div\n                      key={movie.id}\n                      className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 hover:bg-radientColor\"\n                      onMouseEnter={() => handleMovieMouseEnter(movie)}\n                      onMouseLeave={handleMovieMouseLeave}\n                    >\n                      <Link to={`/movie/${movie.id}`}>\n                        <img className=\"w-full h-auto\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title} />\n                      </Link>\n                      <p className=\"pt-2 pl-2 truncate text-white\">{movie.title || movie.name}</p>\n                    </div>\n                  ))}\n              </>\n            )}\n          </div>\n\n          {/* Pagination */}\n          {/* ... */}\n        </div>\n\n        <div className=\"w-1/4\">\n          <div className=\"h-full\">\n            {/* Place your text content here */}\n            {/* ... */}\n          </div>\n        </div>\n      </div>\n\n      {/* Modal */}\n      {isModalVisible && hoveredMovie && (\n        <div className=\"absolute top-0 left-0 right-0 bottom-0 bg-black bg-opacity-75 flex items-center justify-center\">\n          <div className=\"bg-white p-4 rounded-lg\">\n            <h3 className=\"text-xl font-bold\">{hoveredMovie.title}</h3>\n            <p>{hoveredMovie.description}</p>\n            {/* Add more details or components as needed */}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAeC,QAAQ,QAAQ,OAAO;AASlD,OAAOC,0BAA0B,MAAM,8BAA8B;AACrE,OAAOC,gBAAgB,MAAM,0BAA0B;AAEvD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAqF;EAAAC,EAAA;EAAA,IAApF;IAAEC,eAAe;IAAEC;EAA8D,CAAC,GAAAH,IAAA;EACpH,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}