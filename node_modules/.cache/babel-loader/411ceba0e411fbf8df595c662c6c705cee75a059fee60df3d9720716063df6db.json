{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst storedToken = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYjMyYTNhOTgxMDQzNzc3YzUyNjE4YTRmNmZhZjc1ZCIsInN1YiI6IjY0NzE5NWYzOTQwOGVjMDBjMjhlMzNhNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.TFNE-KUDbxeeR7hY0vXNAx_Q_gTQBzJCanXUpw51Hmg';\nexport default function Profile() {\n  _s();\n  const [bearerToken, setBearerToken] = useState('');\n  const [adult, setAdult] = useState(false);\n  const [title, setTitle] = useState('');\n  const [language, setLanguage] = useState('');\n  const [popularity, setPopularity] = useState(Number);\n  const bodyData = {\n    adult: adult,\n    title: title,\n    language: language,\n    popularity: popularity\n  };\n  useEffect(() => {\n    const token = localStorage.getItem(storedToken);\n    setBearerToken(token);\n  }, []);\n  const url = 'https://api.themoviedb.org/3/trending/all/day?language=en-US';\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: `Bearer ${bearerToken}`\n    },\n    body: JSON.stringify(bodyData)\n  };\n  const fetchMovieData = async () => {\n    const response = await fetch(url, options);\n    const data = response.json();\n    return data;\n  };\n  const {\n    data,\n    isLoading,\n    isSuccess,\n    isError\n  } = useQuery('MyMovieData', fetchMovieData);\n  if (isLoading) {\n    console.log('the data is still loading');\n  }\n  if (isSuccess) {\n    alert('You have successfully fetch the data.');\n  }\n  if (isError) {\n    alert('Sorry you could not fetch the data');\n  }\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Profile, \"avh9MGEtx3cccbmFN/sVkjUP9tU=\", false, function () {\n  return [useQuery];\n});\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useQuery","Fragment","_Fragment","jsxDEV","_jsxDEV","storedToken","Profile","_s","bearerToken","setBearerToken","adult","setAdult","title","setTitle","language","setLanguage","popularity","setPopularity","Number","bodyData","token","localStorage","getItem","url","options","method","headers","accept","Authorization","body","JSON","stringify","fetchMovieData","response","fetch","data","json","isLoading","isSuccess","isError","console","log","alert","_c","$RefreshReg$"],"sources":["/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/profile.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useQuery } from 'react-query'\nconst storedToken = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYjMyYTNhOTgxMDQzNzc3YzUyNjE4YTRmNmZhZjc1ZCIsInN1YiI6IjY0NzE5NWYzOTQwOGVjMDBjMjhlMzNhNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.TFNE-KUDbxeeR7hY0vXNAx_Q_gTQBzJCanXUpw51Hmg'\n\nexport default function Profile() {\n\n  const [bearerToken, setBearerToken] = useState('')\n  const [adult, setAdult ] = useState(false)\n  const [title, setTitle] = useState('')\n  const [language, setLanguage] = useState('')\n  const [popularity, setPopularity ] = useState(Number)\n\n  const bodyData = {\n    adult:adult,\n    title: title,\n    language: language,\n    popularity: popularity\n  }\n\n  useEffect(()=>{\n    const token:any = localStorage.getItem(storedToken)\n    setBearerToken(token)\n}, [])\n\n\n\n  const url = 'https://api.themoviedb.org/3/trending/all/day?language=en-US'\n\n  const options = {\n    method: 'GET',\n    headers:{\n      accept: 'application/json',\n      Authorization: `Bearer ${bearerToken}`\n    },\n    body: JSON.stringify(bodyData)\n  }\n\n  const fetchMovieData =async()=>{\n    const response = await fetch(url,options)\n    const data = response.json()\n    return data\n  }\n\n  const { data, isLoading, isSuccess, isError } = useQuery('MyMovieData', fetchMovieData)\n\n  if(isLoading){\n    console.log('the data is still loading')\n  }\n\n  if(isSuccess){\n    alert('You have successfully fetch the data.')\n  }\n\n  if(isError){\n    alert('Sorry you could not fetch the data')\n  }\n  console.log(data)\n\n\n\n  return (\n    <>\n     \n    </>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,QAAQ,QAAQ,aAAa;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACtC,MAAMC,WAAW,GAAG,qNAAqN;AAEzO,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEhC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAE,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAE,GAAGlB,QAAQ,CAACmB,MAAM,CAAC;EAErD,MAAMC,QAAQ,GAAG;IACfT,KAAK,EAACA,KAAK;IACXE,KAAK,EAAEA,KAAK;IACZE,QAAQ,EAAEA,QAAQ;IAClBE,UAAU,EAAEA;EACd,CAAC;EAEDlB,SAAS,CAAC,MAAI;IACZ,MAAMsB,KAAS,GAAGC,YAAY,CAACC,OAAO,CAACjB,WAAW,CAAC;IACnDI,cAAc,CAACW,KAAK,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAIJ,MAAMG,GAAG,GAAG,8DAA8D;EAE1E,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAC;MACNC,MAAM,EAAE,kBAAkB;MAC1BC,aAAa,EAAG,UAASpB,WAAY;IACvC,CAAC;IACDqB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,QAAQ;EAC/B,CAAC;EAED,MAAMa,cAAc,GAAE,MAAAA,CAAA,KAAS;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAG,EAACC,OAAO,CAAC;IACzC,MAAMW,IAAI,GAAGF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC5B,OAAOD,IAAI;EACb,CAAC;EAED,MAAM;IAAEA,IAAI;IAAEE,SAAS;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGvC,QAAQ,CAAC,aAAa,EAAEgC,cAAc,CAAC;EAEvF,IAAGK,SAAS,EAAC;IACXG,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAC1C;EAEA,IAAGH,SAAS,EAAC;IACXI,KAAK,CAAC,uCAAuC,CAAC;EAChD;EAEA,IAAGH,OAAO,EAAC;IACTG,KAAK,CAAC,oCAAoC,CAAC;EAC7C;EACAF,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EAIjB,oBACE/B,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEP;AAACK,EAAA,CA7DuBD,OAAO;EAAA,QAuCmBN,QAAQ;AAAA;AAAA2C,EAAA,GAvClCrC,OAAO;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}