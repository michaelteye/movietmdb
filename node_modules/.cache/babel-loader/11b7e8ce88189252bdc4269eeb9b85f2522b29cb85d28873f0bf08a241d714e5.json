{"ast":null,"code":"var _jsxFileName = \"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/profile.tsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React from 'react';\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  // const [movies, setMovies] = useState([]);\n  // const [totalMovies, setTotalMovies] = useState(0)\n\n  const fetchData = async () => {\n    const response = await axios.get('https://api.themoviedb.org/3/trending/all/day?language=en-US');\n    if (response.status !== 200) {\n      throw new Error('Request failed');\n    }\n    return response.data;\n  };\n\n  // const fetchData = async () => {\n  //   const uri = 'https://api.themoviedb.org/3/trending/all/day?language=en-US'\n  //   const options = {\n  //     method: 'GET',\n  //     headers: {\n  //       accept: 'application/json',\n  //       Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYjMyYTNhOTgxMDQzNzc3YzUyNjE4YTRmNmZhZjc1ZCIsInN1YiI6IjY0NzE5NWYzOTQwOGVjMDBjMjhlMzNhNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.TFNE-KUDbxeeR7hY0vXNAx_Q_gTQBzJCanXUpw51Hmg'\n  //     }\n  //   };\n  //   try {\n  //     const response = await fetch(\n  //       uri, options\n  //     );\n\n  //     if(response.ok){\n  //       // console.log('the information you provided is sucessfull')\n  //     }\n\n  //     if(!response.ok){\n  //       console.log('bad request please check your network tap for results')\n  //     }\n\n  //     if (!response.ok) {\n  //       throw new Error('Request failed');\n  //     }\n\n  //     const data = await response.json();\n  //     setMovies(data.results);\n  //     setTotalMovies(data.total_results)\n  //   } catch (error) {\n  //     console.error('Error fetching data:', error);\n  //   }\n  // };\n\n  const {\n    data,\n    error,\n    isLoading\n  } = useQuery('movies', fetchData);\n  if (isLoading) {\n    console.log('the loading process has started');\n  }\n  if (error) {\n    throw new Error('Check your system again');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"TzaG363++UfZodhkxr8dOjzQ7hc=\", false, function () {\n  return [useQuery];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["axios","React","useQuery","jsxDEV","_jsxDEV","Profile","_s","fetchData","response","get","status","Error","data","error","isLoading","console","log","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/profile.tsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useQueries, useQuery } from 'react-query';\nimport MovieData from '../hooks/getMovies';\n\nconst Profile = () => {\n  // const [movies, setMovies] = useState([]);\n  // const [totalMovies, setTotalMovies] = useState(0)\n\n  const fetchData = async () => {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/all/day?language=en-US'\n    );\n  \n    if (response.status !== 200) {\n      throw new Error('Request failed');\n    }\n  \n    return response.data;\n  };\n  \n\n  // const fetchData = async () => {\n  //   const uri = 'https://api.themoviedb.org/3/trending/all/day?language=en-US'\n  //   const options = {\n  //     method: 'GET',\n  //     headers: {\n  //       accept: 'application/json',\n  //       Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYjMyYTNhOTgxMDQzNzc3YzUyNjE4YTRmNmZhZjc1ZCIsInN1YiI6IjY0NzE5NWYzOTQwOGVjMDBjMjhlMzNhNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.TFNE-KUDbxeeR7hY0vXNAx_Q_gTQBzJCanXUpw51Hmg'\n  //     }\n  //   };\n  //   try {\n  //     const response = await fetch(\n  //       uri, options\n  //     );\n\n  //     if(response.ok){\n  //       // console.log('the information you provided is sucessfull')\n  //     }\n\n  //     if(!response.ok){\n  //       console.log('bad request please check your network tap for results')\n  //     }\n\n  //     if (!response.ok) {\n  //       throw new Error('Request failed');\n  //     }\n\n  //     const data = await response.json();\n  //     setMovies(data.results);\n  //     setTotalMovies(data.total_results)\n  //   } catch (error) {\n  //     console.error('Error fetching data:', error);\n  //   }\n  // };\n\n\n  const {data, error, isLoading } =  useQuery('movies',fetchData)\n\n  if(isLoading){\n    console.log('the loading process has started')\n  }\n  if(error){\n    throw new Error('Check your system again')\n  }\n\n  return (\n    <div>\n      {/* <h4>The movie is {data.total_results}</h4> */}\n      <h1>{data.name}</h1>\n     \n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAA+B,OAAO;AAClD,SAAqBC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA;;EAEA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC9B,8DACF,CAAC;IAED,IAAID,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;IACnC;IAEA,OAAOH,QAAQ,CAACI,IAAI;EACtB,CAAC;;EAGD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,MAAM;IAACA,IAAI;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAIZ,QAAQ,CAAC,QAAQ,EAACK,SAAS,CAAC;EAE/D,IAAGO,SAAS,EAAC;IACXC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;EAChD;EACA,IAAGH,KAAK,EAAC;IACP,MAAM,IAAIF,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEA,oBACEP,OAAA;IAAAa,QAAA,eAEEb,OAAA;MAAAa,QAAA,EAAKL,IAAI,CAACM;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjB,CAAC;AAEV,CAAC;AAAChB,EAAA,CApEID,OAAO;EAAA,QAoDwBH,QAAQ;AAAA;AAAAqB,EAAA,GApDvClB,OAAO;AAsEb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}