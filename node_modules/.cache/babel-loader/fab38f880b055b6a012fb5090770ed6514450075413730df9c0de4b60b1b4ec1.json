{"ast":null,"code":"var _jsxFileName = \"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/LatestMovie.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LatestMovieTv() {\n  _s();\n  const [activeButton, setActiveButton] = useState('Movies');\n  const buttonStyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px]';\n  const buttonStyle1 = 'rounded bg-[#ffae06] text-white ml-2 my-2 px-2 text-center h-[30px] font-light text-[12px]';\n  const {\n    isLoading: LoadingLatestMovie,\n    isError: LatestError,\n    data: Latest\n  } = FetchLatestQuery();\n  const handleButton = ButtonName => {\n    setActiveButton(ButtonName);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"my-2 ml-2 text-white font-extrabold text-[24px]\",\n        children: \"LATEST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButton('Movies'),\n        className: activeButton === 'Movies' ? buttonStyle1 : buttonStyle,\n        children: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButton('Tv'),\n        className: activeButton === 'Tv' ? buttonStyle1 : buttonStyle,\n        children: \"TV shows\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true);\n}\n_s(LatestMovieTv, \"XNlc0VnK+dK7G03hRLN7J0V36Gc=\");\n_c = LatestMovieTv;\nvar _c;\n$RefreshReg$(_c, \"LatestMovieTv\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","LatestMovieTv","_s","activeButton","setActiveButton","buttonStyle","buttonStyle1","isLoading","LoadingLatestMovie","isError","LatestError","data","Latest","FetchLatestQuery","handleButton","ButtonName","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/LatestMovie.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport LatestTv from './Latest/LatestTv'\nimport LatestMovie from './Latest/LatestMovie'\n\nexport default function LatestMovieTv() {\n    const [activeButton, setActiveButton] = useState('Movies')\n\n    const buttonStyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px]'\n    const buttonStyle1 = 'rounded bg-[#ffae06] text-white ml-2 my-2 px-2 text-center h-[30px] font-light text-[12px]'\n\n    const {isLoading:LoadingLatestMovie, isError:LatestError, data:Latest} = FetchLatestQuery()\n\n\n    const handleButton = (ButtonName:any)=>{\n        setActiveButton(ButtonName)\n    }\n\n  return (\n    <>\n                                    <div className='flex'>\n                                            <p className='my-2 ml-2 text-white font-extrabold text-[24px]'>LATEST</p>\n                                             <button \n                                             onClick={()=>handleButton('Movies')}\n                                             className={activeButton === 'Movies' ? buttonStyle1 : buttonStyle}>Movies</button>\n                                             <button\n                                             onClick={()=>handleButton('Tv')}\n                                              className={activeButton === 'Tv' ? buttonStyle1 : buttonStyle}>TV shows</button>\n                                    </div>\n\n                                        <div className=\"flex flex-wrap\">\n                                              \n                                                    {/* {\n                                                           Latest && Latest.map((latestmovie:any)=>(\n                                                                \n\n                                                    \n                                                <div key={latestmovie.id} className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 relative\">\n\n                                                                <img className=\"w-full h-[220px] rounded\" src={`https://image.tmdb.org/t/p/w500/${latestmovie.poster_path}`} \n                                                                alt={latestmovie.title || latestmovie.name} />\n                                                        <p className='bg-[#020916]  text-white absolute top-2 left-4 rounded mt-1 w-8 text-center'>HD</p>\n                                                        <div className='text-center bottom-0'>\n                                                            <p className='text-white truncate'>{latestmovie.title || latestmovie.name}</p>\n                                                            <p className='text-zinc-400'>{latestmovie.popularity  }<span> { latestmovie.vote_count }</span></p>\n                                                            <span className='flex text-center pl-10'>\n                                                                <span>\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6\">\n                                                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z\" />\n                                                                </svg>\n                                                                </span>\n                                                                year\n                                                            </span>\n                                                        </div>\n                                                </div>\n                                            )) */}\n                                                {/* } */}\n                                        </div>\n    </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAIvC,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,QAAQ,CAAC;EAE1D,MAAMS,WAAW,GAAG,gGAAgG;EACpH,MAAMC,YAAY,GAAG,4FAA4F;EAEjH,MAAM;IAACC,SAAS,EAACC,kBAAkB;IAAEC,OAAO,EAACC,WAAW;IAAEC,IAAI,EAACC;EAAM,CAAC,GAAGC,gBAAgB,CAAC,CAAC;EAG3F,MAAMC,YAAY,GAAIC,UAAc,IAAG;IACnCX,eAAe,CAACW,UAAU,CAAC;EAC/B,CAAC;EAEH,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACgClB,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACblB,OAAA;QAAGmB,SAAS,EAAC,iDAAiD;QAAAD,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxEvB,OAAA;QACAwB,OAAO,EAAEA,CAAA,KAAIR,YAAY,CAAC,QAAQ,CAAE;QACpCG,SAAS,EAAEd,YAAY,KAAK,QAAQ,GAAGG,YAAY,GAAGD,WAAY;QAAAW,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClFvB,OAAA;QACAwB,OAAO,EAAEA,CAAA,KAAIR,YAAY,CAAC,IAAI,CAAE;QAC/BG,SAAS,EAAEd,YAAY,KAAK,IAAI,GAAGG,YAAY,GAAGD,WAAY;QAAAW,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC,eAEFvB,OAAA;MAAKmB,SAAS,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA2B1B,CAAC;EAAA,eACxC,CAAC;AAEP;AAACnB,EAAA,CAvDuBD,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}