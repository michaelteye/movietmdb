{"ast":null,"code":"var _jsxFileName = \"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/featured/TrendingMovies.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport FetchTrendingMovieQuery from '../../hooks/getTrendingMovie';\nimport YearSvg from '../../components/icons/year';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TrendingMovie() {\n  _s();\n  const {\n    isLoading,\n    isError: FetchTrendingError,\n    isSuccess,\n    data: TrendingMovies\n  } = FetchTrendingMovieQuery();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await FetchTrendingMovieQuery();\n      } catch (err) {\n        console.log('err', err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Implementing the FetchLatestQuery\n  console.log('data is', TrendingMovies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap\",\n    children: TrendingMovies && TrendingMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"w-full h-[220px] rounded\",\n        src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n        alt: movie.title || movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 57\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bg-[#020916]  text-white absolute top-2 left-4 rounded mt-1 w-8 text-center\",\n        children: \"HD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center bottom-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white truncate\",\n          children: movie.title || movie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-zinc-400\",\n          children: [`${movie.first_air_date || movie.release_date}`, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", movie.media_type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 132\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"flex text-center pl-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(YearSvg, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 57\n          }, this), \"year\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 53\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 49\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 41\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 29\n  }, this);\n}\n_s(TrendingMovie, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TrendingMovie;\nvar _c;\n$RefreshReg$(_c, \"TrendingMovie\");","map":{"version":3,"names":["React","useEffect","FetchTrendingMovieQuery","YearSvg","jsxDEV","_jsxDEV","TrendingMovie","_s","isLoading","isError","FetchTrendingError","isSuccess","data","TrendingMovies","fetchData","err","console","log","className","children","map","movie","src","poster_path","alt","title","name","fileName","_jsxFileName","lineNumber","columnNumber","first_air_date","release_date","media_type","id","_c","$RefreshReg$"],"sources":["/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/featured/TrendingMovies.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport FetchTrendingMovieQuery from '../../hooks/getTrendingMovie'\nimport YearSvg from '../../components/icons/year'\nexport default function TrendingMovie() {\n    const {isLoading, isError:FetchTrendingError, isSuccess, data:TrendingMovies} = FetchTrendingMovieQuery()\n\n    useEffect(()=>{\n        const fetchData = async()=>{\n            try{\n                await FetchTrendingMovieQuery()\n            }\n            catch(err:any){\n               console.log('err', err)    \n            }\n\n        }\n        fetchData()\n       \n    },[])\n  \n\n    // Implementing the FetchLatestQuery\n    console.log('data is', TrendingMovies)\n  return (\n    \n                \n                            <div className=\"flex flex-wrap\">\n                                {/* {thumbnailUrls.map((url, index) => ( */}\n                                    {\n                                        TrendingMovies && TrendingMovies.map((movie:any)=>(\n                                            \n                                        <div key={movie.id} className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 relative\">\n\n                                                        <img className=\"w-full h-[220px] rounded\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} \n                                                        alt={movie.title || movie.name} />\n                                                <p className='bg-[#020916]  text-white absolute top-2 left-4 rounded mt-1 w-8 text-center'>HD</p>\n                                                <div className='text-center bottom-0'>\n                                                    <p className='text-white truncate'>{movie.title || movie.name}</p>\n                                                    <p className='text-zinc-400'>{`${movie.first_air_date  || movie.release_date}`}<span> { movie.media_type }</span></p>\n                                                    <span className='flex text-center pl-10'>\n                                                        <span>\n                                                        {/* <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6\">\n                                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z\" />\n                                                        </svg> */}\n                                                        \n                                                        {/* including the year SVG */}\n\n                                                        <YearSvg/>\n                                                        </span>\n                                                        year\n                                                    </span>\n                                                </div>\n                                        </div>\n                                ))\n                                    }\n                            </div>\n                    \n    \n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}