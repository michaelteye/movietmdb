{"ast":null,"code":"var _jsxFileName = \"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/featured/Trending.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport FetchTrendsQuery from '../../hooks/getAllTrends';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllTrending() {\n  _s();\n  const {\n    isLoading,\n    isError: FetchTrendingError,\n    isSuccess,\n    data: Movies\n  } = FetchTrendsQuery();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await FetchTrendsQuery();\n      } catch (err) {\n        console.log('err', err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Implementing the FetchLatestQuery\n  console.log('data is', Movies);\n  return (\n    /*#__PURE__*/\n    // <div className=\"flex flex-wrap\">\n    //         {\n    //             Movies && Movies.map((movie:any)=>(\n    //     <div key={movie.id} className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 relative\">\n    //                     <img className=\"w-full h-[220px] rounded\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} \n    //                     alt={movie.title || movie.name} />\n    //             <p className='bg-[#020916]  text-white absolute top-2 left-4 rounded mt-1 w-8 text-center'>HD</p>\n    //             <div className='text-center bottom-0'>\n    //                 <p className='text-white truncate'>{movie.title || movie.name}</p>\n    //                 <p className='text-zinc-400'>{`${movie.first_air_date  || movie.release_date}`}<span> { movie.media_type }</span></p>\n    //                 {/* <span className='flex text-center pl-10'>\n    //                     <span>\n    //                         <YearSvg/>\n    //                     </span>\n    //                     year\n    //                 </span> */}\n    //             </div>\n    //     </div>\n    //     ))}\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"flex flex-wrap\",\n      children: movies && movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        // className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2\"\n        className: classNames('w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2', {\n          'hover:bg-radientColor': hoveredMovieId === movie.id\n        }),\n        onMouseOver: () => handleMouseOver(movie.id),\n        onMouseOut: handleMouseOut,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${movie.id}`,\n          className: \"hover:bg-background\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classNames('w-full h-auto relative', {\n              'bg-background': hoveredMovieId === movie.id\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: classNames('w-full h-auto rounded-lg', {\n                'rounded-ful': hoveredMovieId === movie.id\n              }),\n              src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), hoveredMovieId === movie.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0 flex items-center justify-center z-10 bg-cardRadient rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(SingleMovieSvg, {\n                className: \"bg-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pt-2 pl-2 truncate text-white\",\n          children: movie.title || movie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), hoveredMovieId === movie.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute mt-2 z-20\",\n          children: /*#__PURE__*/_jsxDEV(WatchMovie, {\n            movieId: movie.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  );\n}\n_s(AllTrending, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AllTrending;\nvar _c;\n$RefreshReg$(_c, \"AllTrending\");","map":{"version":3,"names":["React","useEffect","FetchTrendsQuery","jsxDEV","_jsxDEV","AllTrending","_s","isLoading","isError","FetchTrendingError","isSuccess","data","Movies","fetchData","err","console","log","className","children","movies","map","movie","classNames","hoveredMovieId","id","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","Link","to","src","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","SingleMovieSvg","name","WatchMovie","movieId","_c","$RefreshReg$"],"sources":["/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/featured/Trending.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport FetchTrendsQuery from '../../hooks/getAllTrends'\nimport YearSvg from '../../components/icons/year'\n\nexport default function AllTrending() {\n    const {isLoading, isError:FetchTrendingError, isSuccess, data:Movies} = FetchTrendsQuery()\n\n    useEffect(()=>{\n        const fetchData = async()=>{\n            try{\n                await FetchTrendsQuery()\n            }\n            catch(err:any){\n               console.log('err', err)    \n            }\n\n        }\n        fetchData()\n       \n    },[])\n  \n\n    // Implementing the FetchLatestQuery\n    console.log('data is', Movies)\n  return (\n    \n\n            // <div className=\"flex flex-wrap\">\n               \n            //         {\n            //             Movies && Movies.map((movie:any)=>(\n\n                            \n            //     <div key={movie.id} className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 relative\">\n\n            //                     <img className=\"w-full h-[220px] rounded\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} \n            //                     alt={movie.title || movie.name} />\n            //             <p className='bg-[#020916]  text-white absolute top-2 left-4 rounded mt-1 w-8 text-center'>HD</p>\n            //             <div className='text-center bottom-0'>\n            //                 <p className='text-white truncate'>{movie.title || movie.name}</p>\n            //                 <p className='text-zinc-400'>{`${movie.first_air_date  || movie.release_date}`}<span> { movie.media_type }</span></p>\n            //                 {/* <span className='flex text-center pl-10'>\n            //                     <span>\n                                  \n            //                         <YearSvg/>\n            //                     </span>\n            //                     year\n            //                 </span> */}\n            //             </div>\n            //     </div>\n            //     ))}\n            // </div>\n            <div className='flex flex-wrap'>\n                {movies && movies.map((movie: any) => (\n        <div\n          key={movie.id}\n          // className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2\"\n          className={classNames('w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2',{\n            'hover:bg-radientColor': hoveredMovieId=== movie.id\n          })}\n          onMouseOver={() => handleMouseOver(movie.id)}\n          onMouseOut={handleMouseOut}\n        >\n          <Link to={`/movie/${movie.id}`} className=\"hover:bg-background\">\n            <div className={classNames('w-full h-auto relative',{\n              'bg-background': hoveredMovieId === movie.id\n            })}>\n              <img\n                  className={classNames('w-full h-auto rounded-lg',{\n                    'rounded-ful': hoveredMovieId === movie.id\n                  })}\n                  src={\n                      `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                  }\n                  alt={movie.title}\n            />\n\n                \n              {hoveredMovieId === movie.id && (\n                      <div className=\"absolute inset-0 flex items-center justify-center z-10 bg-cardRadient rounded-lg\">\n                        <SingleMovieSvg className='bg-white' />\n                      </div>\n                    )}\n\n            \n\n            </div>\n            \n          </Link>\n          <p className=\"pt-2 pl-2 truncate text-white\">\n            {movie.title || movie.name}\n          </p>\n          {hoveredMovieId === movie.id && (\n            <div className=\"absolute mt-2 z-20\">\n              <WatchMovie movieId={movie.id} />\n            </div>\n          )}\n        </div>\n      ))}\n\n            </div>\n    \n    \n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}