{"ast":null,"code":"var _jsxFileName = \"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/featured/TrendingMovies.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport FetchTrendingMovieQuery from '../../hooks/getTrendingMovie';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TrendingMovie() {\n  _s();\n  const {\n    isLoading,\n    isError: FetchTrendingError,\n    isSuccess,\n    data: TrendingMovies\n  } = FetchTrendingMovieQuery();\n  const [hoveredMovieId, setHoveredMovieId] = useState('');\n  const [isHovering, setIsHovering] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await FetchTrendingMovieQuery();\n      } catch (err) {\n        console.log('err', err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Implementing the FetchLatestQuery\n  console.log('data is', TrendingMovies);\n  return (\n    /*#__PURE__*/\n    // <div className=\"flex flex-wrap\">\n    //     {/* {thumbnailUrls.map((url, index) => ( */}\n    //         {\n    //             TrendingMovies && TrendingMovies.map((movie:any)=>(\n    //             <div key={movie.id} className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 relative\">\n    //                             <img className=\"w-full h-[220px] rounded\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} \n    //                             alt={movie.title || movie.name} />\n    //                     <p className='bg-[#020916]  text-white absolute top-2 left-4 rounded mt-1 w-8 text-center'>HD</p>\n    //                     <div className='text-center bottom-0'>\n    //                         <p className='text-white truncate'>{movie.title || movie.name}</p>\n    //                         <p className='text-zinc-400'>{`${movie.first_air_date  || movie.release_date}`}<span> { movie.media_type }</span></p>\n    //                         <span className='flex text-center pl-10'>\n    //                             <span>\n    //                             {/* <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6\">\n    //                                 <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z\" />\n    //                             </svg> */}\n    //                             {/* including the year SVG */}\n    //                             <YearSvg/>\n    //                             </span>\n    //                             year\n    //                         </span>\n    //                     </div>\n    //             </div>\n    //     ))\n    //         }\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"flex flex-wrap\",\n      children: TrendingMovies && TrendingMovies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        // className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2\"\n        className: classNames('w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2', {\n          'hover:bg-radientColor': hoveredMovieId === movie.id\n        }),\n        onMouseOver: () => handleMouseOver(movie.id),\n        onMouseOut: handleMouseOut,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie/${movie.id}`,\n          className: \"hover:bg-background\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classNames('w-full h-auto relative', {\n              'bg-background': hoveredMovieId === movie.id\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: classNames('w-full h-auto rounded-lg', {\n                'rounded-ful': hoveredMovieId === movie.id\n              }),\n              src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n              alt: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), hoveredMovieId === movie.id && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0 flex items-center justify-center z-10 bg-cardRadient rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(SingleMovieSvg, {\n                className: \"bg-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"pt-2 pl-2 truncate text-white\",\n          children: movie.title || movie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), hoveredMovieId === movie.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute mt-2 z-20\",\n          children: /*#__PURE__*/_jsxDEV(WatchMovie, {\n            movieId: movie.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }, this)\n  );\n}\n_s(TrendingMovie, \"W60z/47ZLh2PYLd9EdulxXtuaT0=\");\n_c = TrendingMovie;\nvar _c;\n$RefreshReg$(_c, \"TrendingMovie\");","map":{"version":3,"names":["React","useEffect","useState","FetchTrendingMovieQuery","classNames","jsxDEV","_jsxDEV","TrendingMovie","_s","isLoading","isError","FetchTrendingError","isSuccess","data","TrendingMovies","hoveredMovieId","setHoveredMovieId","isHovering","setIsHovering","currentPage","setCurrentPage","fetchData","err","console","log","className","children","map","movie","id","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","Link","to","src","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","SingleMovieSvg","name","WatchMovie","movieId","_c","$RefreshReg$"],"sources":["/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/featured/TrendingMovies.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport FetchTrendingMovieQuery from '../../hooks/getTrendingMovie'\nimport YearSvg from '../../components/icons/year'\nimport classNames from 'classnames'\nexport default function TrendingMovie() {\n    const {isLoading, isError:FetchTrendingError, isSuccess, data:TrendingMovies} = FetchTrendingMovieQuery()\n    const [hoveredMovieId, setHoveredMovieId] = useState('');\n    const [isHovering, setIsHovering] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    useEffect(()=>{\n        const fetchData = async()=>{\n            try{\n                await FetchTrendingMovieQuery()\n            }\n            catch(err:any){\n               console.log('err', err)    \n            }\n\n        }\n        fetchData()\n       \n    },[])\n  \n\n    // Implementing the FetchLatestQuery\n    console.log('data is', TrendingMovies)\n  return (\n                            // <div className=\"flex flex-wrap\">\n                            //     {/* {thumbnailUrls.map((url, index) => ( */}\n                            //         {\n                            //             TrendingMovies && TrendingMovies.map((movie:any)=>(\n                                            \n                            //             <div key={movie.id} className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 relative\">\n\n                            //                             <img className=\"w-full h-[220px] rounded\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} \n                            //                             alt={movie.title || movie.name} />\n                            //                     <p className='bg-[#020916]  text-white absolute top-2 left-4 rounded mt-1 w-8 text-center'>HD</p>\n                            //                     <div className='text-center bottom-0'>\n                            //                         <p className='text-white truncate'>{movie.title || movie.name}</p>\n                            //                         <p className='text-zinc-400'>{`${movie.first_air_date  || movie.release_date}`}<span> { movie.media_type }</span></p>\n                            //                         <span className='flex text-center pl-10'>\n                            //                             <span>\n                            //                             {/* <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6\">\n                            //                                 <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z\" />\n                            //                             </svg> */}\n                                                        \n                            //                             {/* including the year SVG */}\n\n                            //                             <YearSvg/>\n                            //                             </span>\n                            //                             year\n                            //                         </span>\n                            //                     </div>\n                            //             </div>\n                            //     ))\n                            //         }\n                            // </div>\n                            <div className='flex flex-wrap'>\n                {TrendingMovies && TrendingMovies.map((movie: any) => (\n                <div\n                key={movie.id}\n                // className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2\"\n                className={classNames('w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2',{\n                    'hover:bg-radientColor': hoveredMovieId=== movie.id\n                })}\n                onMouseOver={() => handleMouseOver(movie.id)}\n                onMouseOut={handleMouseOut}\n                >\n                <Link to={`/movie/${movie.id}`} className=\"hover:bg-background\">\n                    <div className={classNames('w-full h-auto relative',{\n                    'bg-background': hoveredMovieId === movie.id\n                    })}>\n                    <img\n                        className={classNames('w-full h-auto rounded-lg',{\n                            'rounded-ful': hoveredMovieId === movie.id\n                        })}\n                        src={\n                            `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                        }\n                        alt={movie.title}\n                    />\n\n                        \n                    {hoveredMovieId === movie.id && (\n                            <div className=\"absolute inset-0 flex items-center justify-center z-10 bg-cardRadient rounded-lg\">\n                                <SingleMovieSvg className='bg-white' />\n                            </div>\n                            )}\n\n                    \n\n                    </div>\n                    \n                </Link>\n                <p className=\"pt-2 pl-2 truncate text-white\">\n                    {movie.title || movie.name}\n                </p>\n                {hoveredMovieId === movie.id && (\n                    <div className=\"absolute mt-2 z-20\">\n                    <WatchMovie movieId={movie.id} />\n                    </div>\n                )}\n                </div>\n                ))}\n\n            </div>\n                    \n    \n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}