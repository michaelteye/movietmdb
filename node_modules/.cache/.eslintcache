[{"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/index.tsx":"1","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/reportWebVitals.ts":"2","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/App.tsx":"3","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/firebase/firebase.js":"4","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/firebase/verfyEmail.tsx":"5","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/auth/login.tsx":"6","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/context/AuthContext.tsx":"7","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/profile.tsx":"8","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/auth/signup.tsx":"9","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/auth/PrivateRoute.tsx":"10","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/navbar.tsx":"11","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/routes/allroutes.tsx":"12","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/layouts/searchLayout.tsx":"13","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/Display.tsx":"14","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/ArrowSvg.tsx":"15","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/getAllTrends.ts":"16","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/spinner/spinner.tsx":"17","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/LatestMovie.tsx":"18","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/getLatestMovies.ts":"19","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/featured/Trending.tsx":"20","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/featured/TrendingMovies.tsx":"21","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/featured/TrendingTv.tsx":"22","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/getTrendingMovie.ts":"23","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/getTrendingTv.ts":"24","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Latest/LatestMovie.tsx":"25","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Latest/LatestTv.tsx":"26","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/getLatestTv.tsx":"27","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/NewReleased/NewReleased.tsx":"28","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/getUpComing.tsx":"29","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Radios/year.tsx":"30","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Radios/country.tsx":"31","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Radios/genre.tsx":"32","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Radios/quality.tsx":"33","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Radios/rating.tsx":"34","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Radios/release.tsx":"35","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Radios/type.tsx":"36","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/layouts/input/filter.tsx":"37","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/pagenateUpcoming.tsx":"38","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/filter.tsx":"39","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/nav.tsx":"40","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/button.tsx":"41","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/detailMovie.tsx":"42","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/whatsapp.tsx":"43","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/facebook.tsx":"44","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/twitter.tsx":"45","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/telegram.tsx":"46","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/snap.tsx":"47","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/linkedIn.tsx":"48","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/database.tsx":"49","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/layouts/comments/commentCard.tsx":"50","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/delete.tsx":"51","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/edit.tsx":"52","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/reply.tsx":"53","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/plus.tsx":"54","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/minus.tsx":"55","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/detailPage/moviedetails.tsx":"56","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/detailPage/InteractiveCommentsSection.tsx":"57","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/layouts/comments/mentions/NewCommentCard.tsx":"58","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/layouts/comments/mentions/DeleteCommentModal.tsx":"59","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/search.tsx":"60","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/watch/watchMovie.tsx":"61","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/watch.tsx":"62","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/error/watchError.tsx":"63","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/movie.tsx":"64","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/closeMovie.tsx":"65","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/singleMovie.tsx":"66","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/searchMovie.tsx":"67","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/year.tsx":"68","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/HomePage/HomeDisplay.tsx":"69","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/star.tsx":"70","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/star-solid.tsx":"71","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/NewReleased/MewReleased.tsx":"72","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/auth/logout.tsx":"73"},{"size":445,"mtime":1687482765590,"results":"74","hashOfConfig":"75"},{"size":425,"mtime":1685163203947,"results":"76","hashOfConfig":"75"},{"size":620,"mtime":1689179301706,"results":"77","hashOfConfig":"75"},{"size":561,"mtime":1686491559246,"results":"78","hashOfConfig":"75"},{"size":2060,"mtime":1691381403304,"results":"79","hashOfConfig":"75"},{"size":4104,"mtime":1691383702856,"results":"80","hashOfConfig":"75"},{"size":398,"mtime":1686500615077,"results":"81","hashOfConfig":"75"},{"size":2173,"mtime":1691293847825,"results":"82","hashOfConfig":"75"},{"size":4797,"mtime":1691381188843,"results":"83","hashOfConfig":"75"},{"size":484,"mtime":1687434475109,"results":"84","hashOfConfig":"75"},{"size":5354,"mtime":1691382581469,"results":"85","hashOfConfig":"75"},{"size":2506,"mtime":1691381728259,"results":"86","hashOfConfig":"75"},{"size":2151,"mtime":1691291656087,"results":"87","hashOfConfig":"75"},{"size":4373,"mtime":1689960675559,"results":"88","hashOfConfig":"75"},{"size":358,"mtime":1687529979189,"results":"89","hashOfConfig":"75"},{"size":917,"mtime":1687929458944,"results":"90","hashOfConfig":"75"},{"size":628,"mtime":1687694038942,"results":"91","hashOfConfig":"75"},{"size":1982,"mtime":1689953128741,"results":"92","hashOfConfig":"75"},{"size":807,"mtime":1687722858742,"results":"93","hashOfConfig":"75"},{"size":3556,"mtime":1689955284721,"results":"94","hashOfConfig":"75"},{"size":6534,"mtime":1689207155906,"results":"95","hashOfConfig":"75"},{"size":6265,"mtime":1689207302623,"results":"96","hashOfConfig":"75"},{"size":828,"mtime":1687721131205,"results":"97","hashOfConfig":"75"},{"size":800,"mtime":1687723899172,"results":"98","hashOfConfig":"75"},{"size":2286,"mtime":1687831113759,"results":"99","hashOfConfig":"75"},{"size":2811,"mtime":1687763238887,"results":"100","hashOfConfig":"75"},{"size":804,"mtime":1687733412153,"results":"101","hashOfConfig":"75"},{"size":11427,"mtime":1690193774627,"results":"102","hashOfConfig":"75"},{"size":805,"mtime":1687991176162,"results":"103","hashOfConfig":"75"},{"size":1101,"mtime":1687986630220,"results":"104","hashOfConfig":"75"},{"size":1066,"mtime":1689950431275,"results":"105","hashOfConfig":"75"},{"size":1095,"mtime":1687986870519,"results":"106","hashOfConfig":"75"},{"size":1098,"mtime":1687986827222,"results":"107","hashOfConfig":"75"},{"size":1094,"mtime":1687986788775,"results":"108","hashOfConfig":"75"},{"size":1100,"mtime":1687986716250,"results":"109","hashOfConfig":"75"},{"size":1093,"mtime":1687986678761,"results":"110","hashOfConfig":"75"},{"size":2117,"mtime":1689113906773,"results":"111","hashOfConfig":"75"},{"size":1144,"mtime":1688122020452,"results":"112","hashOfConfig":"75"},{"size":464,"mtime":1688862601416,"results":"113","hashOfConfig":"75"},{"size":523,"mtime":1688141876786,"results":"114","hashOfConfig":"75"},{"size":474,"mtime":1688138541647,"results":"115","hashOfConfig":"75"},{"size":1047,"mtime":1688197375036,"results":"116","hashOfConfig":"75"},{"size":1368,"mtime":1688622261524,"results":"117","hashOfConfig":"75"},{"size":383,"mtime":1688622277750,"results":"118","hashOfConfig":"75"},{"size":759,"mtime":1688622293670,"results":"119","hashOfConfig":"75"},{"size":1326,"mtime":1688622309105,"results":"120","hashOfConfig":"75"},{"size":487,"mtime":1688622327411,"results":"121","hashOfConfig":"75"},{"size":495,"mtime":1688622345897,"results":"122","hashOfConfig":"75"},{"size":697,"mtime":1688646251479,"results":"123","hashOfConfig":"75"},{"size":6893,"mtime":1688664831482,"results":"124","hashOfConfig":"75"},{"size":375,"mtime":1688564240573,"results":"125","hashOfConfig":"75"},{"size":475,"mtime":1688564194698,"results":"126","hashOfConfig":"75"},{"size":451,"mtime":1688563998945,"results":"127","hashOfConfig":"75"},{"size":669,"mtime":1688564293020,"results":"128","hashOfConfig":"75"},{"size":440,"mtime":1688564027332,"results":"129","hashOfConfig":"75"},{"size":14434,"mtime":1689275101098,"results":"130","hashOfConfig":"75"},{"size":5173,"mtime":1688662978315,"results":"131","hashOfConfig":"75"},{"size":2508,"mtime":1688558643724,"results":"132","hashOfConfig":"75"},{"size":1796,"mtime":1688555890095,"results":"133","hashOfConfig":"75"},{"size":573,"mtime":1688862725715,"results":"134","hashOfConfig":"75"},{"size":2700,"mtime":1689954293329,"results":"135","hashOfConfig":"75"},{"size":350,"mtime":1689041378627,"results":"136","hashOfConfig":"75"},{"size":956,"mtime":1689006712186,"results":"137","hashOfConfig":"75"},{"size":337,"mtime":1689046226924,"results":"138","hashOfConfig":"75"},{"size":423,"mtime":1689004643996,"results":"139","hashOfConfig":"75"},{"size":363,"mtime":1689046630986,"results":"140","hashOfConfig":"75"},{"size":924,"mtime":1689133168147,"results":"141","hashOfConfig":"75"},{"size":691,"mtime":1688140247438,"results":"142","hashOfConfig":"75"},{"size":2313,"mtime":1689853548432,"results":"143","hashOfConfig":"75"},{"size":427,"mtime":1689863988658,"results":"144","hashOfConfig":"75"},{"size":598,"mtime":1689867322314,"results":"145","hashOfConfig":"75"},{"size":11669,"mtime":1690352841826,"results":"146","hashOfConfig":"75"},{"size":694,"mtime":1691383501769,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},"ow9dtm",{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"151"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"151"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"151"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"151"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"151"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"151"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"151"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"151"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"151"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"151"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"151"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"151"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"151"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"151"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"151"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"151"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"151"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"151"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"151"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"151"},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"151"},{"filePath":"339","messages":"340","suppressedMessages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"151"},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"151"},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"151"},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"387","messages":"388","suppressedMessages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/index.tsx",[],[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/reportWebVitals.ts",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/App.tsx",["393","394","395","396","397"],[],"import React, { useState } from 'react'\nimport Allroutes from './routes/allroutes'\nimport Navbar from './dashboard/navbar'\nimport SearchLayout from './components/layouts/searchLayout'\nimport Display from './pages/Display'\nimport NewReleased from './pages/NewReleased/NewReleased'\nimport InteractiveCommentsSection from './pages/detailPage/InteractiveCommentsSection'\n\n\n\nexport default function App() {\n  \n\n\n  return (\n    <div>\n      <Navbar/>\n      {/* <SearchLayout handleSearch={handleSearch} searchQuery={searchQuery} /> */}\n      {/* <Display/> */}\n      {/* <NewReleased/> */}\n      <Allroutes/>\n\n    </div>\n  )\n}\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/firebase/firebase.js",[],[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/firebase/verfyEmail.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/auth/login.tsx",["398","399"],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/context/AuthContext.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/profile.tsx",["400","401","402","403","404"],[],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n// import MovieData from '../hooks/getMovies';\nimport FetchQuery from '../hooks/getAllTrends';\n\n// const Profile = () => {\n//   const [movies, setMovies] = useState([]);\n//   const [totalMovies, setTotalMovies] = useState(0)\n\n//   useEffect(()=>{\n//     fetchData()\n\n//   },[])\n  \n\n//   const fetchData = async () => {\n//     const uri = 'https://api.themoviedb.org/3/trending/all/day?language=en-US'\n//     const options = {\n//       method: 'GET',\n//       headers: {\n//         accept: 'application/json',\n//         Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYjMyYTNhOTgxMDQzNzc3YzUyNjE4YTRmNmZhZjc1ZCIsInN1YiI6IjY0NzE5NWYzOTQwOGVjMDBjMjhlMzNhNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.TFNE-KUDbxeeR7hY0vXNAx_Q_gTQBzJCanXUpw51Hmg'\n//       }\n//     };\n//     try {\n//       const response = await fetch(\n//         uri, options\n//       );\n\n//       if(response.ok){\n//         // console.log('the information you provided is sucessfull')\n//       }\n\n//       if(!response.ok){\n//         console.log('bad request please check your network tap for results')\n//       }\n\n//       if (!response.ok) {\n//         throw new Error('Request failed');\n//       }\n\n//       const data = await response.json();\n//       setMovies(data.results);\n//       setTotalMovies(data.total_results)\n//     } catch (error) {\n//       console.error('Error fetching data:', error);\n//     }\n//   };\n\n\n//   return (\n//     <div>\n//       {\n//         movies.map((movie:any)=>(\n//           <div key={movie.id}>\n//                 <p>{movie.title || movie.name}</p>\n//           </div>\n//         ))\n//       }\n     \n//     </div>\n//   );\n// };\n\n// export default Profile;\n\n// {movie.poster_path && (\n//   <img\n//     src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n//     alt={movie.title || movie.name}\n//   />\n// )}\nconst Profile = () =>{\n  const {isLoading, isError, isSuccess, data} = FetchQuery()\n\n  if(isLoading){\n    return <p>Loading...</p>\n  }\n\n  if(isError){\n    return <p>Error fetching data</p>\n  }\n\n  return(\n    <div>\n      \n    </div>\n  )\n}\n\nexport default Profile","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/auth/signup.tsx",["405","406"],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/auth/PrivateRoute.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/navbar.tsx",["407","408","409","410","411","412","413"],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/routes/allroutes.tsx",["414","415","416","417","418"],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/layouts/searchLayout.tsx",["419","420","421","422","423","424"],[],"import React, { useState } from 'react';\nimport FilterSvg from '../icons/filter';\nimport SearchSvg from '../icons/search';\nimport SearchMovieQuery from '../../hooks/searchMovie';\nimport { QueryObserverResult } from 'react-query';\n\ninterface Movie {\n  id: number;\n  title: string;\n  // Add other movie properties here\n}\n\nexport default function SearchLayout({handleSearch,searchQuery}:{handleSearch:any,searchQuery:any}) {\n  \n\n  // const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   setSearchQuery(e.target.value);\n  // };\n\n  const { data:myData, isLoading, isError } = SearchMovieQuery(searchQuery);\n\n  return (\n    <>\n      <form className=\"flex items-center justify-center pt-10 bg-startbg\">\n        <div className=\"relative bg-[#1a212d] rounded-lg h-[50px]\">\n          <button className='absolute top-6 left-2  transform -translate-y-1/2 bg-yellow-500  text-black rounded-lg px-2 pt-2 duration- flex h-[30px] text-center text-[15px] text-xs font-bold'>\n            <FilterSvg/>\n            Filter\n          </button>\n          <input\n            type=\"text\"\n            value={searchQuery}\n            onChange={handleSearch}\n            className=\"w-[800px] pt-[15px] pl-[120px] h-[40px] pr-10 text-sm bg-[#1a212d] text-white placeholder-gray-400 rounded-full focus:outline-none focus:border-transparent\"\n            placeholder=\"Search TV Shows, Movies...\"\n            required\n          />\n          <button\n            type=\"submit\"\n            className=\"absolute right-0 top-1/2 transform -translate-y-1/2 bg-[#1a212d] rounded-md ml-2 px-1 py-2\"\n          >\n            <SearchSvg/>\n          </button>\n\n          {/* <div className='absolute mt-1 w-full p-2 bg-white shadow-lg rounded-bl rounded-br max-h-56 overflow-y-auto'>\n          {isLoading ? (\n              <div>Loading...</div>\n            ) : isError ? (\n              <div>Error occurred.</div>\n            ) : (\n              <ul>\n                {myData?.map((movie: Movie) => (\n                  <li key={movie.id}>{movie.title}</li>\n                ))}\n              </ul>\n            )}\n          </div> */}\n        </div>\n      </form>\n    </>\n  );\n}\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/Display.tsx",["425","426","427","428","429"],[],"import React, { useState } from 'react';\nimport ArrowSvg from '../components/icons/ArrowSvg';\n\nimport SearchLayout from '../components/layouts/searchLayout';\nimport AllTrending from '../dashboard/featured/Trending';\nimport TrendingMovie from '../dashboard/featured/TrendingMovies';\nimport TrendingTv from '../dashboard/featured/TrendingTv';\nimport LatestMovieTv from '../dashboard/LatestMovie';\nimport SearchMovieQuery from '../hooks/searchMovie';\nimport FetchTrendsQuery from '../hooks/getAllTrends';\nimport { Link } from 'react-router-dom';\n\ninterface DisplayProps {\n  searchQuery: string;\n  \n}\n\nexport default function Display({ searchQuery }: DisplayProps) {\n  const buttonStyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px] w-[70px]';\n  const buttonStyle1 = 'rounded bg-[#ffae06] text-white ml-2 my-2 px-2 text-center h-[30px] font-light text-[12px] w-[70px]';\n  const tvstyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px] w-[70px] justify-center'\n  const [onhovering,setOnhovering]=useState(false)\n  const [activeButton, setActiveButton] = useState('trending');\n\n  const handButton = (buttonName: string) => {\n    setActiveButton(buttonName);\n  };\n  const handleHover = ()=>{\n    setOnhovering(true)\n  }\n\n  const { isLoading, isError:FetchTrendingError, isSuccess, data: Movies } = SearchMovieQuery(searchQuery);\n  const { data: movies } = FetchTrendsQuery();\n\n  return (\n    <div className=\"bg-[#020916]\" onMouseOver={handleHover}>\n      {!searchQuery ? (\n        <>\n          <div className=\"flex flex-col items-center\">\n            <p className=\"my-2 ml-2 text-white font-extrabold text-[24px]\">FEATURED</p>\n            <div className=\"flex mt-2 md:mt-0\">\n              <button onClick={() => handButton('movie')} className={activeButton === 'movie' ? buttonStyle1 : buttonStyle}>\n                Movies\n              </button>\n              <button onClick={() => handButton('tv show')} className={activeButton === 'tv show' ? buttonStyle1 : tvstyle}>\n                Tv show\n              </button>\n              <button onClick={() => handButton('trending')} className={activeButton === 'trending' ? buttonStyle1 : buttonStyle}>\n                Trending\n              </button>\n            </div>\n          </div>\n\n          {/* Section for the images and the update content */}\n          <div className=\"flex flex-col md:flex-row\">\n            <div className=\"w-full\">\n              {activeButton === 'trending' ? <AllTrending /> : activeButton === 'movie' ? <TrendingMovie /> : activeButton === 'tv show' ? <TrendingTv /> : ''}\n              <LatestMovieTv />\n            </div>\n\n            <div className=\"w-full mt-4 md:mt-0\">\n              <div className=\"h-full\">\n\n                {/* Place your text content here */}\n                <div className=\"flex justify-between items-center px-2\">\n                  <p className=\"text-white font-extrabold text-[24px]\">UPDATED</p>\n                  <button className=\"w-[70px] h-[30px] text-[#605f62] bg-[#1a212d] rounded-md flex items-center justify-center font-medium text-[12px]\">\n                    More\n                    <span>\n                      <ArrowSvg />\n                    </span>\n                  </button>\n                </div>\n\n                {/* The code on the update part */}\n                <div className=\"px-2 mt-2\">\n                  {movies && movies.slice(0, 9).map((movie: any) => (\n                    <Link to={`/movie/${movie.id}`} key={movie.id}>\n                      <div className={`flex-col w-full h-[70px] mt-[2px] bg-[#020916] text-white hover:bg-cardRadient  border-2 border-zinc-700 border-solid rounded-md ${movie[0] ? 'mt-[30]' : ''}`}>\n                        <div className=\"flex\">\n                          <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt=\"\" className=\"w-10 h-[60px] md:32 pl-2 pt-2 rounded-md text-center\" />\n                          <p className=\"pt-2 pl-2 truncate\">{movie.title || movie.name}</p>\n                        </div>\n                      </div>\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        <SearchLayout handleSearch={() => {}} searchQuery={searchQuery} />\n      )}\n    </div>\n  );\n}\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/ArrowSvg.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/getAllTrends.ts",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/spinner/spinner.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/LatestMovie.tsx",["430","431"],[],"import React, { useState } from 'react'\nimport LatestTv from './Latest/LatestTv'\nimport LatestMovie from './Latest/LatestMovie'\nimport FetchTrendsQuery from '../hooks/getAllTrends'\n\nexport default function LatestMovieTv() {\n    const [activeButton, setActiveButton] = useState('Movies')\n\n    const buttonStyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px]'\n    const buttonStyle1 = 'rounded bg-[#ffae06] text-white ml-2 my-2 px-2 text-center h-[30px] font-light text-[12px] w-[70px]'\n    const detailstyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px]'\n    const tvstyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px] w-[70px] justify-center'\n\n    const handleButton = (ButtonName:any)=>{\n        setActiveButton(ButtonName)\n    }\nreturn (\n        <>\n            <div className='flex'>\n                    <p className='my-2 ml-2 text-white font-extrabold text-[24px]'>LATEST</p>\n                    <button \n                    onClick={()=>handleButton('Movies')}\n                    className={activeButton === 'Movies' ? buttonStyle1 : buttonStyle}>Movies</button>\n                    <button\n                    onClick={()=>handleButton('Tv')}\n                    className={activeButton === 'Tv' ? buttonStyle1 : tvstyle }>Tv SHow</button>\n                        <div className='pl-[780px]'> \n                                <a href=\"\">\n                                    <button className={detailstyle}>\n                                        More\n                                    </button>\n                                </a>\n                        </div>\n            </div>\n                    <div className=\"flex flex-wrap\">\n                        { activeButton === 'Movies' && <LatestMovie/> }\n                        { activeButton === 'Tv' && <LatestTv/> }\n                    </div>\n        </>\n  )\n}\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/getLatestMovies.ts",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/featured/Trending.tsx",["432","433","434","435","436","437","438"],[],"import React, { useEffect, useState } from 'react'\nimport FetchTrendsQuery from '../../hooks/getAllTrends'\nimport YearSvg from '../../components/icons/year'\nimport classNames from 'classnames'\nimport SingleMovieSvg from '../../components/icons/singleMovie'\nimport { Link } from 'react-router-dom'\nimport WatchMovie from '../../pages/watch/watchMovie'\n\nexport default function AllTrending() {\n    const {isLoading, isError:FetchTrendingError, isSuccess, data:Movies} = FetchTrendsQuery()\n    const [hoveredMovieId, setHoveredMovieId] = useState('');\n    const [isHovering, setIsHovering] = useState(false);\n    // const [ isHovering, setIsHovering ] = useState('')\n    const [currentPage, setCurrentPage] = useState(1);\n\n\n    const handlePageChange = (selectedPage:any) => {\n        const pageNumber = selectedPage.selected + 1;\n        console.log(pageNumber)\n        setCurrentPage(pageNumber);\n      };\n    \n    //   const handleMouseOver = () => {\n    //     setIsHovering(true);\n    //   };\n    \n      const handleMouseOut = () => {\n        setIsHovering(false);\n      };\n    \n      const handleMouseOver = (movieId: string) => {\n        setHoveredMovieId(movieId);\n      };\n\n    useEffect(()=>{\n        const fetchData = async()=>{\n            try{\n                await FetchTrendsQuery()\n            }\n            catch(err:any){\n               console.log('err', err)    \n            }\n\n        }\n        fetchData()\n       \n    },[])\n  \n\n    // Implementing the FetchLatestQuery\n    console.log('data is', Movies)\n  return (\n    \n            <div className='flex flex-wrap'>\n                {Movies && Movies.map((movie: any) => (\n                <div\n                key={movie.id}\n                // className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2\"\n                className={classNames('w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2',{\n                    'hover:bg-radientColor': hoveredMovieId=== movie.id\n                })}\n                onMouseOver={() => handleMouseOver(movie.id)}\n                onMouseOut={handleMouseOut}\n                >\n                <Link to={`/movie/${movie.id}`} className=\"hover:bg-background\">\n                    <div className={classNames('w-full h-auto relative',{\n                    'bg-background': hoveredMovieId === movie.id\n                    })}>\n                    <img\n                        className={classNames('w-full h-auto rounded-lg',{\n                            'rounded-ful': hoveredMovieId === movie.id\n                        })}\n                        src={\n                            `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                        }\n                        alt={movie.title}\n                    />\n\n                        \n                    {hoveredMovieId === movie.id && (\n                            <div className=\"absolute inset-0 flex items-center justify-center z-10 bg-cardRadient rounded-lg\">\n                                <SingleMovieSvg className='bg-white' />\n                            </div>\n                        )}\n\n                    \n\n                    </div>\n                    \n                </Link>\n                <p className=\"pt-2 pl-2 truncate text-white\">\n                    {movie.title || movie.name}\n                </p>\n                {hoveredMovieId === movie.id && (\n                    <div className=\"absolute mt-2 z-20\">\n                    <WatchMovie movieId={movie.id} />\n                    </div>\n                )}\n                </div>\n                ))}\n\n            </div>\n    \n    \n  )\n}\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/featured/TrendingMovies.tsx",["439","440","441","442","443","444","445"],[],"import React, { useEffect, useState } from 'react'\nimport FetchTrendingMovieQuery from '../../hooks/getTrendingMovie'\nimport YearSvg from '../../components/icons/year'\nimport classNames from 'classnames'\nimport SingleMovieSvg from '../../components/icons/singleMovie'\nimport { Link } from 'react-router-dom'\nimport WatchMovie from '../../pages/watch/watchMovie'\nexport default function TrendingMovie() {\n    const {isLoading, isError:FetchTrendingError, isSuccess, data:TrendingMovies} = FetchTrendingMovieQuery()\n    const [hoveredMovieId, setHoveredMovieId] = useState('');\n    const [isHovering, setIsHovering] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const handlePageChange = (selectedPage:any) => {\n        const pageNumber = selectedPage.selected + 1;\n        console.log(pageNumber)\n        setCurrentPage(pageNumber);\n      };\n    \n      // const handleMouseOver = () => {\n      //   setIsHovering(true);\n      // };\n    \n      const handleMouseOut = () => {\n        setIsHovering(false);\n      };\n    \n      const handleMouseOver = (movieId: string) => {\n        setHoveredMovieId(movieId);\n      };\n\n    useEffect(()=>{\n        const fetchData = async()=>{\n            try{\n                await FetchTrendingMovieQuery()\n            }\n            catch(err:any){\n               console.log('err', err)    \n            }\n\n        }\n        fetchData()\n       \n    },[])\n  \n\n    // Implementing the FetchLatestQuery\n    console.log('data is', TrendingMovies)\n  return (\n                            // <div className=\"flex flex-wrap\">\n                            //     {/* {thumbnailUrls.map((url, index) => ( */}\n                            //         {\n                            //             TrendingMovies && TrendingMovies.map((movie:any)=>(\n                                            \n                            //             <div key={movie.id} className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 relative\">\n\n                            //                             <img className=\"w-full h-[220px] rounded\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} \n                            //                             alt={movie.title || movie.name} />\n                            //                     <p className='bg-[#020916]  text-white absolute top-2 left-4 rounded mt-1 w-8 text-center'>HD</p>\n                            //                     <div className='text-center bottom-0'>\n                            //                         <p className='text-white truncate'>{movie.title || movie.name}</p>\n                            //                         <p className='text-zinc-400'>{`${movie.first_air_date  || movie.release_date}`}<span> { movie.media_type }</span></p>\n                            //                         <span className='flex text-center pl-10'>\n                            //                             <span>\n                            //                             {/* <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6\">\n                            //                                 <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z\" />\n                            //                             </svg> */}\n                                                        \n                            //                             {/* including the year SVG */}\n\n                            //                             <YearSvg/>\n                            //                             </span>\n                            //                             year\n                            //                         </span>\n                            //                     </div>\n                            //             </div>\n                            //     ))\n                            //         }\n                            // </div>\n                <div className='flex flex-wrap'>\n                    {TrendingMovies && TrendingMovies.map((movie: any) => (\n                    <div\n                    key={movie.id}\n                    // className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2\"\n                    className={classNames('w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2',{\n                        'hover:bg-radientColor': hoveredMovieId=== movie.id\n                    })}\n                    onMouseOver={() => handleMouseOver(movie.id)}\n                    onMouseOut={handleMouseOut}\n                    >\n                    <Link to={`/movie/${movie.id}`} className=\"hover:bg-background\">\n                        <div className={classNames('w-full h-auto relative',{\n                        'bg-background': hoveredMovieId === movie.id\n                        })}>\n                        <img\n                            className={classNames('w-full h-auto rounded-lg',{\n                                'rounded-ful': hoveredMovieId === movie.id\n                            })}\n                            src={\n                                `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                            }\n                            alt={movie.title}\n                        />\n\n                            \n                        {hoveredMovieId === movie.id && (\n                                <div className=\"absolute inset-0 flex items-center justify-center z-10 bg-cardRadient rounded-lg\">\n                                    <SingleMovieSvg className='bg-white' />\n                                </div>\n                                )}\n\n                        \n\n                        </div>\n                        \n                    </Link>\n                    <p className=\"pt-2 pl-2 truncate text-white\">\n                        {movie.title || movie.name}\n                    </p>\n                    {hoveredMovieId === movie.id && (\n                        <div className=\"absolute mt-2 z-20\">\n                        <WatchMovie movieId={movie.id} />\n                        </div>\n                    )}\n                    </div>\n                    ))}\n\n                </div>\n                    \n    \n  )\n}\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/featured/TrendingTv.tsx",["446","447","448","449","450","451","452"],[],"import React, { useEffect, useState } from 'react'\nimport FetchTrendingTv from '../../hooks/getTrendingTv'\nimport YearSvg from '../../components/icons/year'\nimport classNames from 'classnames'\nimport { Link } from 'react-router-dom'\nimport SingleMovieSvg from '../../components/icons/singleMovie'\nimport WatchMovie from '../../pages/watch/watchMovie'\n\nexport default function TrendingTv() {\n    const {isLoading, isError:FetchTrendingError, isSuccess, data:TrendingTv} = FetchTrendingTv()\n    const [hoveredMovieId, setHoveredMovieId] = useState('');\n    const [isHovering, setIsHovering] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const handlePageChange = (selectedPage:any) => {\n        const pageNumber = selectedPage.selected + 1;\n        console.log(pageNumber)\n        setCurrentPage(pageNumber);\n      };\n    \n      // const handleMouseOver = () => {\n      //   setIsHovering(true);\n      // };\n    \n      const handleMouseOut = () => {\n        setIsHovering(false);\n      };\n    \n      const handleMouseOver = (movieId: string) => {\n        setHoveredMovieId(movieId);\n      };\n\n    useEffect(()=>{\n        const fetchData = async()=>{\n            try{\n                await FetchTrendingTv()\n            }\n            catch(err:any){\n               console.log('err', err)    \n            }\n\n        }\n        fetchData()\n       \n    },[])\n  \n\n    // Implementing the FetchLatestQuery\n    console.log('data is', TrendingTv)\n  return (\n                            // <div className=\"flex flex-wrap\">\n                            //     {/* {thumbnailUrls.map((url, index) => ( */}\n                            //         {\n                            //             TrendingTv && TrendingTv.map((tv:any)=>(\n                                            \n                            //             <div key={tv.id} className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 relative\">\n\n                            //                     <img className=\"w-full h-[220px] rounded\" src={`https://image.tmdb.org/t/p/w500/${tv.poster_path}`} \n                            //                     alt={tv.title || tv.name} />\n                            //                     <p className='bg-[#020916]  text-white absolute top-2 left-4 rounded mt-1 w-8 text-center'>HD</p>\n                            //                     <div className='text-center bottom-0'>\n                            //                         <p className='text-white truncate'>{tv.title || tv.name}</p>\n                            //                         <p className='text-zinc-400'>{`${tv.first_air_date  || tv.release_date}`}<span> { tv.media_type }</span></p>\n                            //                         <span className='flex text-center pl-10'>\n                            //                             <span>\n                            //                             {/* <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6\">\n                            //                                 <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z\" />\n                            //                             </svg>*/}\n                            //                             <YearSvg/>\n                            //                             </span>\n                            //                             year\n                            //                         </span>\n                            //                     </div>\n                            //             </div>\n                            //     ))\n                            //         }\n                            // </div>\n\n                    <div className='flex flex-wrap'>\n                    {TrendingTv && TrendingTv.map((movie: any) => (\n                    <div\n                    key={movie.id}\n                    // className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2\"\n                    className={classNames('w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2',{\n                        'hover:bg-radientColor': hoveredMovieId=== movie.id\n                    })}\n                    onMouseOver={() => handleMouseOver(movie.id)}\n                    onMouseOut={handleMouseOut}\n                    >\n                    <Link to={`/movie/${movie.id}`} className=\"hover:bg-background\">\n                        <div className={classNames('w-full h-auto relative',{\n                        'bg-background': hoveredMovieId === movie.id\n                        })}>\n                        <img\n                            className={classNames('w-full h-auto rounded-lg',{\n                                'rounded-ful': hoveredMovieId === movie.id\n                            })}\n                            src={\n                                `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                            }\n                            alt={movie.title}\n                        />\n\n                            \n                        {hoveredMovieId === movie.id && (\n                                <div className=\"absolute inset-0 flex items-center justify-center z-10 bg-cardRadient rounded-lg\">\n                                    <SingleMovieSvg className='bg-white' />\n                                </div>\n                                )}\n\n                        \n\n                        </div>\n                        \n                    </Link>\n                    <p className=\"pt-2 pl-2 truncate text-white\">\n                        {movie.title || movie.name}\n                    </p>\n                    {hoveredMovieId === movie.id && (\n                        <div className=\"absolute mt-2 z-20\">\n                        <WatchMovie movieId={movie.id} />\n                        </div>\n                    )}\n                    </div>\n                    ))}\n\n                </div>\n  )\n}\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/getTrendingMovie.ts",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/getTrendingTv.ts",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Latest/LatestMovie.tsx",["453","454"],[],"import React from 'react'\nimport FetchLatestQuery from '../../hooks/getLatestMovies'\n\nexport default function LatestMovie() {\n    const {isLoading:LoadingLatestMovie, isError:LatestError, data:Latest} = FetchLatestQuery()\n  return (\n    <>\n                    {\n                                    Latest && Latest.map((latestmovie:any)=>(\n                                        \n\n                            \n                        <div key={latestmovie.id} className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 relative\">\n\n                                        <img className=\"w-full h-[220px] rounded\" src={`https://image.tmdb.org/t/p/w500/${latestmovie.poster_path}`} \n                                        alt={latestmovie.title || latestmovie.name} />\n                                <p className='bg-[#020916]  text-white absolute top-2 left-4 rounded mt-1 w-8 text-center'>HD</p>\n                                <div className='text-center bottom-0'>\n                                    <p className='text-white truncate'>{latestmovie.title || latestmovie.name}</p>\n                                    <p className='text-zinc-400'>{latestmovie.popularity  }<span> { latestmovie.vote_count }</span></p>\n                                    <span className='flex text-center pl-10'>\n                                        <span>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6\">\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z\" />\n                                        </svg>\n                                        </span>\n                                        year\n                                    </span>\n                                </div>\n                        </div>\n                    ))\n                        }\n\n    </>\n  )\n}\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Latest/LatestTv.tsx",["455","456"],[],"import React from 'react'\n\nimport FetchLatestTvQuery from '../../hooks/getLatestTv'\n\nexport default function LatestTv() {\n    const {isLoading:LoadingLatestMovie, isError:LatestError, data:Latest} = FetchLatestTvQuery()\n  return (\n    <>\n                    {\n                                                           Latest && Latest.map((latestmovie:any)=>(\n                                                                \n\n                                                    \n                                                <div key={latestmovie.id} className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 relative\">\n\n                                                                <img className=\"w-full h-[220px] rounded\" src={`https://image.tmdb.org/t/p/w500/${latestmovie.poster_path}`} \n                                                                alt={latestmovie.title || latestmovie.name} />\n                                                        <p className='bg-[#020916]  text-white absolute top-2 left-4 rounded mt-1 w-8 text-center'>HD</p>\n                                                        <div className='text-center bottom-0'>\n                                                            <p className='text-white truncate'>{latestmovie.title || latestmovie.name}</p>\n                                                            <p className='text-zinc-400'>{latestmovie.popularity  }<span> { latestmovie.vote_count }</span></p>\n                                                            <span className='flex text-center pl-10'>\n                                                                <span>\n                                                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6\">\n                                                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z\" />\n                                                                </svg>\n                                                                </span>\n                                                                year\n                                                            </span>\n                                                        </div>\n                                                </div>\n                                            ))\n                                                }\n\n    </>\n  )\n}\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/getLatestTv.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/NewReleased/NewReleased.tsx",["457","458","459","460","461","462","463","464","465","466","467","468","469","470","471"],[],"import classNames from \"classnames\";\nimport React, { useEffect, useState } from \"react\";\nimport Year from \"../../dashboard/Radios/year\";\nimport Country from \"../../dashboard/Radios/country\";\nimport Genre from \"../../dashboard/Radios/genre\";\nimport Quality from \"../../dashboard/Radios/quality\";\nimport Rating from \"../../dashboard/Radios/rating\";\nimport Release from \"../../dashboard/Radios/release\";\nimport Type from \"../../dashboard/Radios/type\";\nimport FetchPaginateUpComingQuery from \"../../hooks/pagenateUpcoming\";\nimport FetchTrendsQuery from \"../../hooks/getAllTrends\";\nimport ReactPaginate from \"react-paginate\";\nimport { Link } from \"react-router-dom\";\nimport WatchMovie from \"../watch/watchMovie\";\nimport SingleMovieSvg from \"../../components/icons/singleMovie\";\nimport SearchLayout from \"../../components/layouts/searchLayout\";\nimport SearchMovieQuery from \"../../hooks/searchMovie\";\nimport StarSvg from \"../../components/icons/star\";\nimport StarMainSvg from \"../../components/icons/star-solid\";\n\nexport default function NewReleased() {\n  const [activeDropdown, setActiveDropdown] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isHovering, setIsHovering] = useState(false);\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [hoveredMovieId, setHoveredMovieId] = useState(\"\");\n  const {\n    data,\n    isLoading,\n    isError: errorMessage,\n  } = FetchPaginateUpComingQuery(currentPage);\n  const { data: movies } = FetchTrendsQuery();\n  const moviesData = data?.data || [];\n  const pageCounts = data?.pageCount || 0;\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handlePageChange = (selectedPage: any) => {\n    const pageNumber = selectedPage.selected + 1;\n    console.log(pageNumber);\n    setCurrentPage(pageNumber);\n  };\n\n  // const handleMouseOver = () => {\n  //   setIsHovering(true);\n  // };\n\n  const handleMouseOut = () => {\n    setIsHovering(false);\n  };\n\n  const handleMouseOver = (movieId: string) => {\n    setHoveredMovieId(movieId);\n  };\n  //implementing the handleSearch in the newRealeased\n\n  const { data: search, isLoading: Loading } = SearchMovieQuery(searchQuery);\n\n  const styleComponent =\n    \"mr-1 text-[#666666] bg-filterColor  h-[30px] hover:bg-changeColor hover:text-black focus:outline-none  font-medium rounded-lg text-sm px-4 py-2.5 text-center inline-flex items-center \";\n  // const buttonStyle = 'rounded bg-[#1a212d] ml-2 my-2 px-2 text-center text-[#605f62] h-[30px] font-light text-[12px]';\n\n  const toggleDropdown = (dropdownName: any) => {\n    if (activeDropdown === dropdownName) {\n      setActiveDropdown(\"\");\n    } else {\n      setActiveDropdown(dropdownName);\n      console.log(\"activeDropdown is >>>\", activeDropdown);\n    }\n  };\n\n  return (\n    <div className=\"bg-[#020916] pt-10\">\n      <p>NEW RELEASE</p>\n      <div className=\"flex flex-wrap\">\n        <div className=\"w-3/4\">\n          <div className=\"flex pl-2\">\n            <div className=\" h-[30px] \">\n              <input\n                type=\"text\"\n                placeholder=\"search...\"\n                className=\"text-[#666666] bg-[#1a212d] w-[120px] rounded mr-2 h-[30px] text-center\"\n              />\n            </div>\n            <Year\n              isOpen={activeDropdown === \"year\"}\n              onToggle={() => toggleDropdown(\"year\")}\n              style={styleComponent}\n            />\n            <Country\n              isOpen={activeDropdown === \"country\"}\n              onToggle={() => toggleDropdown(\"country\")}\n              style={styleComponent}\n            />\n            <Genre\n              isOpen={activeDropdown === \"genre\"}\n              onToggle={() => toggleDropdown(\"genre\")}\n              style={styleComponent}\n            />\n            <Quality\n              isOpen={activeDropdown === \"quality\"}\n              onToggle={() => toggleDropdown(\"quality\")}\n              style={styleComponent}\n            />\n            <Rating\n              isOpen={activeDropdown === \"rating\"}\n              onToggle={() => toggleDropdown(\"rating\")}\n              style={styleComponent}\n            />\n            <Release\n              isOpen={activeDropdown === \"release\"}\n              onToggle={() => toggleDropdown(\"release\")}\n              style={styleComponent}\n            />\n            <Type\n              isOpen={activeDropdown === \"type\"}\n              onToggle={() => toggleDropdown(\"type\")}\n              style={styleComponent}\n            />\n            <button\n              data-dropdown-toggle=\"dropdownDefaultRadio\"\n              className=\"tex-black bg-[#ffae06] h-[30px] ml-1\n              font-medium rounded-lg text-sm px-4 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n              type=\"button\"\n            >\n              filter\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth=\"1.5\"\n                stroke=\"currentColor\"\n                className=\"w-4 h-4 ml-4\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99\"\n                />\n              </svg>\n            </button>\n          </div>\n\n          <div className=\"flex flex-wrap\">\n            {isLoading ? (\n              \"Loading...\"\n            ) : (\n              <>\n                {/* Page movie */}\n                {moviesData &&\n                  moviesData.map((movie: any) => (\n                    <div\n                      key={movie.id}\n                      // className=\"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2\"\n                      className={classNames(\n                        \"w-1/2 sm:w-1/3 md:w-1/4 lg:w-1/6 p-2 pt-4\",\n                        {\n                          \"hover:bg-radientColor\": hoveredMovieId === movie.id,\n                        }\n                      )}\n                      onMouseOver={() => handleMouseOver(movie.id)}\n                      onMouseOut={handleMouseOut}\n                    >\n                      <Link\n                        to={`/movie/${movie.id}`}\n                        className=\"hover:bg-background\"\n                      >\n                        <div\n                          className={classNames(\"w-full h-auto relative\", {\n                            \"bg-background\": hoveredMovieId === movie.id,\n                          })}\n                        >\n                          <img\n                            className={classNames(\"w-full h-auto rounded-lg\", {\n                              \"rounded-ful\": hoveredMovieId === movie.id,\n                            })}\n                            src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                            alt={movie.title}\n                          />\n\n                          {hoveredMovieId === movie.id && (\n                            <div className=\"absolute inset-0 flex items-center justify-center z-10 bg-cardRadient rounded-lg\">\n                              <SingleMovieSvg className=\"bg-white\" />\n                            </div>\n                          )}\n                        </div>\n                      </Link>\n                      <p className=\"pt-2 pl-2 truncate text-white\">\n                        {movie.title || movie.name}\n                      </p>\n                      {hoveredMovieId === movie.id && (\n                        <div className=\"absolute mt-2 z-20\">\n                          <WatchMovie movieId={movie.id} />\n                        </div>\n                      )}\n                    </div>\n                  ))}\n              </>\n            )}\n          </div>\n\n          <div className=\"  mt-4 inline-flex -space-x-px\">\n            <ReactPaginate\n              previousLabel={\"Previous\"}\n              nextLabel={\"Next\"}\n              breakLabel={\".....\"}\n              breakClassName=\"px-2 bg-white w-[45px] text-center\"\n              pageCount={pageCounts}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={5}\n              onPageChange={handlePageChange}\n              nextClassName=\"px-3 py-2 ml-4 leading-tight text-gray-500 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\"\n              containerClassName=\"bg-black inline-flex space-x-px  rounded ml-[500px] mb-4\"\n              activeClassName=\"bg-yellow-400 text-white\"\n              previousClassName=\"px-3 py-2 mr-0 leading-tight text-gray-500 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\"\n              pageClassName=\"px-3 py-2 pl-4 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white\"\n            />\n          </div>\n        </div>\n\n        <div className=\"w-1/4\">\n          <div className=\"h-full\">\n           \n            <div className=\"pl-[5px] pt-[32px]\">\n              \n                <p className=\"text-white text-2xl font-bold\">SUGGESTIONS</p>\n              \n              <div className=\"sm:flex flex-wrap\">\n\n              {movies &&\n                movies.slice(0, 9).map((movie: any) => (\n                  <Link to={`/movie/${movie.id}`}>\n                    <div\n                      className={`flex-col w-[280px] h-[70px] mt-[2px] bg-[#020916] text-white hover:bg-cardRadient  border-2 border-zinc-700 border-solid rounded-md ${\n                        movie[0] ? \"mt-[30\" : \"\"\n                      }`}\n                      >\n                      <div className=\"flex\">\n                        <img\n                          src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                          alt=\"\"\n                          className=\"w-10 h-[60px] md:32 pl-2 pt-2 rounded-md text-center\"\n                          />\n                        <p className=\"pt-2 pl-2 truncate\">\n                          {movie.title || movie.name}\n                          <br />\n                          <div className=\"flex text-sm font-light\">\n                            <p className=\"pt-1\">\n                              <StarMainSvg />\n                            </p>\n                            <span className=\"pb-2 pl-[2px] pt-[2px] font-light text-xs text-[#ffae06]\">\n                              {movie.genre_ids[0]}\n                            </span>\n                            <span className=\"pb-2 pl-[5px] pt-[2px] font-light text-xs text-[#666666]\">\n                              {movie.vote_average} EP {movie.genre_ids[0]}\n                            </span>\n                          </div>\n                        </p>\n                      </div>\n                    </div>\n                  </Link>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* modal goes here */}\n\n      {/* {isHovering && <WatchMovie/>} */}\n    </div>\n  );\n}\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/getUpComing.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Radios/year.tsx",["472","473"],[],"import React, { useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport RadioDisplay from '../../components/layouts/input/filter';\n\ninterface YearProps {\n  isOpen: boolean;\n  onToggle: () => void;\n  style:any\n}\n\n\nconst Year: React.FC<YearProps> = ({ isOpen, onToggle, style }) => {\n\n\n  return (\n    <>\n      <div className=\"flex\">\n        <button\n          id=\"dropdownRadioButton\"\n          data-dropdown-toggle=\"dropdownDefaultRadio\"\n          className={style}\n          type=\"button\"\n          onClick={onToggle}\n          \n        >\n          year\n          <svg\n            className={`w-4 h-4 ml-4 pl-1 ${isOpen ? 'transform rotate-180' : ''}`}\n            aria-hidden=\"true\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n          </svg>\n        </button>\n        {isOpen && (\n          <RadioDisplay/>\n        )}\n      </div>\n    </>\n  );\n}\nexport default Year\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Radios/country.tsx",["474"],[],"import React, { useState } from 'react';\nimport RadioDisplay from '../../components/layouts/input/filter';\n\n\ninterface YearProps {\n  isOpen: boolean;\n  onToggle: () => void;\n  style:any\n}\n\nconst Country: React.FC<YearProps> = ({ isOpen, onToggle,style }) => {\n  \n\n  \n\n\n  return (\n    <>\n      <div className=\"flex\">\n        <button\n          id=\"dropdownRadioButton\"\n          data-dropdown-toggle=\"dropdownDefaultRadio\"\n          className={style}\n          type=\"button\"\n          onClick={onToggle}\n        >\n          country\n          <svg\n            className={`w-4 h-4 ml-4 pl-1 ${isOpen ? 'transform rotate-180 ' : ''}`}\n            aria-hidden=\"true\"\n            fill=\"#666666\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n          </svg>\n        </button>\n        {isOpen && (\n          <RadioDisplay/>\n        )}\n      </div>\n    </>\n  );\n}\nexport default Country\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Radios/genre.tsx",["475","476"],[],"import React, { useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport RadioDisplay from '../../components/layouts/input/filter';\n\ninterface YearProps {\n  isOpen: boolean;\n  onToggle: () => void;\n  style:any\n}\n\nconst Genre: React.FC<YearProps> = ({ isOpen, onToggle, style }) =>  {\n \n\n \n  return (\n    <>\n      <div className=\"flex\">\n        <button\n          id=\"dropdownRadioButton\"\n          data-dropdown-toggle=\"dropdownDefaultRadio\"\n          className={style}\n          type=\"button\"\n          onClick={onToggle}\n        >\n          genre\n          <svg\n            className={`w-4 h-4 ml-4 pl-1 ${isOpen ? 'transform rotate-180' : ''}`}\n            aria-hidden=\"true\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n          </svg>\n        </button>\n        {isOpen && (\n          <RadioDisplay/>\n        )}\n      </div>\n    </>\n  );\n}\nexport default Genre","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Radios/quality.tsx",["477","478"],[],"import React, { useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport RadioDisplay from '../../components/layouts/input/filter';\n\n\ninterface YearProps {\n  isOpen: boolean;\n  onToggle: () => void;\n  style:any\n}\n\nconst Quality: React.FC<YearProps> = ({ isOpen, onToggle, style }) => {\n\n\n  return (\n    <>\n      <div className=\"flex\">\n        <button\n          id=\"dropdownRadioButton\"\n          data-dropdown-toggle=\"dropdownDefaultRadio\"\n          className={style}\n          type=\"button\"\n          onClick={onToggle}\n        >\n          quality\n          <svg\n            className={`w-4 h-4 ml-4 pl-1 ${isOpen ? 'transform rotate-180' : ''}`}\n            aria-hidden=\"true\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n          </svg>\n        </button>\n        {isOpen && (\n          <RadioDisplay/>\n        )}\n      </div>\n    </>\n  );\n}\nexport default Quality","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Radios/rating.tsx",["479","480"],[],"import React, { useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport RadioDisplay from '../../components/layouts/input/filter';\n\n\ninterface YearProps {\n  isOpen: boolean;\n  onToggle: () => void;\n  style:any\n}\nconst Rating: React.FC<YearProps> = ({ isOpen, onToggle,style }) =>{\n\n\n  return (\n    <>\n      <div className=\"flex\">\n        <button\n          id=\"dropdownRadioButton\"\n          data-dropdown-toggle=\"dropdownDefaultRadio\"\n          className={style}\n          type=\"button\"\n          onClick={onToggle}\n        >\n          rating\n          <svg\n            className={`w-4 h-4 ml-4 pl-1 ${isOpen ? 'transform rotate-180' : ''}`}\n            aria-hidden=\"true\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n          </svg>\n        </button>\n        {isOpen && (\n          <RadioDisplay/>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Rating\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Radios/release.tsx",["481","482"],[],"import React, { useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport RadioDisplay from '../../components/layouts/input/filter';\n\n\n\ninterface YearProps {\n  isOpen: boolean;\n  onToggle: () => void;\n  style:any\n}\nconst Release: React.FC<YearProps> = ({ isOpen, onToggle, style }) => {\n\n\n  return (\n    <>\n      <div className=\"flex\">\n        <button\n          id=\"dropdownRadioButton\"\n          data-dropdown-toggle=\"dropdownDefaultRadio\"\n          className={style}\n          type=\"button\"\n          onClick={onToggle}\n        >\n          release\n          <svg\n            className={`w-4 h-4 ml-4 pl-1 ${isOpen ? 'transform rotate-180' : ''}`}\n            aria-hidden=\"true\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n          </svg>\n        </button>\n        {isOpen && (\n          <RadioDisplay/>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Release\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/dashboard/Radios/type.tsx",["483","484"],[],"import React, { useState } from 'react';\nimport Loader from 'react-loader-spinner';\nimport RadioDisplay from '../../components/layouts/input/filter';\n\n\ninterface YearProps {\n  isOpen: boolean;\n  onToggle: () => void;\n  style:any\n}\n\n\nconst Type: React.FC<YearProps> = ({ isOpen, onToggle, style }) =>  {\n\n\n  return (\n    <>\n      <div className=\"flex\">\n        <button\n          id=\"dropdownRadioButton\"\n          data-dropdown-toggle=\"dropdownDefaultRadio\"\n          className={style}\n          type=\"button\"\n          onClick={onToggle}\n        >\n          type\n          <svg\n            className={`w-4 h-4 ml-4 pl-1 ${isOpen ? 'transform rotate-180' : ''}`}\n            aria-hidden=\"true\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n          </svg>\n        </button>\n        {isOpen && (\n          <RadioDisplay/>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Type\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/layouts/input/filter.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/pagenateUpcoming.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/filter.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/nav.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/button.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/detailMovie.tsx",["485"],[],"import axios from 'axios'\nimport { useState } from 'react'\nimport { useQuery } from 'react-query'\n\n\n\nconst FetchMovieDetails = async(movieId:any)=>{\n\n    const uri = `https://api.themoviedb.org/3/movie/${movieId}`\n    const options = {\n        method:'GET',\n        headers:{\n            accept: 'application/json',\n            Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiYjMyYTNhOTgxMDQzNzc3YzUyNjE4YTRmNmZhZjc1ZCIsInN1YiI6IjY0NzE5NWYzOTQwOGVjMDBjMjhlMzNhNCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.TFNE-KUDbxeeR7hY0vXNAx_Q_gTQBzJCanXUpw51Hmg',\n        }\n    }\n\n\n    const response = await axios(uri,options);\n    if(response.status === 200){\n        console.log('the detail page is given as: ', response.data)\n        const moviedetails = response.data\n        console.log('the movie details is given as ', moviedetails)\n        return moviedetails\n    }\n\n}\n\nconst FetchSingleMovieDetails = (movieId:any)=>{\n    return useQuery(['movieDetails',movieId],()=>FetchMovieDetails(movieId))\n}\nexport default FetchSingleMovieDetails\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/whatsapp.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/facebook.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/twitter.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/telegram.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/snap.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/linkedIn.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/database.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/layouts/comments/commentCard.tsx",["486"],[],"import React,{useState} from 'react'\nimport moment from 'moment'\nimport DeleteSvg from '../../icons/delete'\nimport EditSvg from '../../icons/edit'\nimport MinusSvg from '../../icons/minus'\nimport PlusSvg from '../../icons/plus'\nimport ReplySvg from '../../icons/reply'\nimport DeleteCommentModal from './mentions/DeleteCommentModal'\n\nexport default function CommentCard({\n  comment,\n  currentUser,\n  updateComment,\n  deleteComment,\n}:{comment:any; currentUser:any; updateComment:any; deleteComment:any}) {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [text, setText] = useState(comment.content);\n\n\n\n  const handleUpvote = () =>{\n    updateComment(comment.id, { score: ++comment.score });\n  };\n  const handleDownvote = () =>{\n    updateComment(comment.id, { score: --comment.score });\n  };\n\n  const handleReply = () =>{\n    updateComment(comment.id, {\n      addReply: true,\n      replyingTo: { username: comment.user.username, id: comment.parentId },\n    });\n  };\n\n  const formatDate = (timestamp:any) =>{\n    const fromNow = moment.unix(timestamp).fromNow();\n    return fromNow;\n  };\n\n  const CommentActions = () =>{\n    return currentUser.username === comment.user.username ? (\n      <div className=\"flex gap-4 h-fit \">\n        <div\n          className=\"group flex gap-2 items-center hover:cursor-pointer\"\n          onClick={() => setModalOpen(true)}\n        >\n          <DeleteSvg/>\n          <div className=\"text-primary-soft-red font-medium group-hover:opacity-50\">\n            Delete\n          </div>\n        </div>\n        <div\n          className=\"group flex gap-2 items-center hover:cursor-pointer\"\n          onClick={() => setEditing(!editing)}\n        >\n          <EditSvg/>\n          <div className=\"text-primary-moderate-blue font-medium group-hover:opacity-50\">\n            Edit\n          </div>\n        </div>\n      </div>\n    ) : (\n      <div\n        className=\"group flex gap-2 items-center hover:cursor-pointer\"\n        onClick={handleReply}\n      >\n        <ReplySvg/>\n        <div className=\"text-primary-moderate-blue font-medium group-hover:opacity-50\">\n          Reply\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <>\n    <div className=\"card bg-white border flex mb-4 sm:p-6 p-2 rounded-md sm:flex-row flex-col-reverse self-center\">\n      <div className=\"flex justify-between sm:items-start sm:m-0 items-center m-2\">\n        <div className=\"sm:w-11 sm:h-22 sm:flex-col sm:py-12 sm:px-2 sm:ml-0 sm:mt-0 w-24 h-10 bg-neutral-very-light-grey flex items-center justify-around rounded-lg\">\n          <div\n            className=\"group hover:cursor-pointer p-1\"\n            onClick={handleUpvote}\n            >\n            <PlusSvg/>\n          </div>\n          <div className=\"my-4 text-primary-moderate-blue\">{comment.score}</div>\n          <div\n            className=\"group hover:cursor-pointer p-1\"\n            onClick={handleDownvote}\n            >\n            <MinusSvg/>\n          </div>\n        </div>\n\n        <div className=\"sm:hidden\">\n          <CommentActions />\n        </div>\n      </div>\n\n      <div className=\"flex flex-col ml-4 w-full\">\n        <div className=\"flex flex-row mb-4 items-center flex-wrap\">\n          <img\n            className=\"w-10 h-10 rounded-full mr-4\"\n            src=\"https://st3.depositphotos.com/6672868/13701/v/450/depositphotos_137014128-stock-illustration-user-profile-icon.jpg\"\n            />\n          <h1 className=\"h-fit mr-4\">{comment.user.username}</h1>\n          {currentUser.username === comment.user.username && (\n            <div className=\"bg-primary-moderate-blue text-white px-2 py-[1px] text-sm rounded-sm mr-4\">\n              you\n            </div>\n          )}\n          <div className=\"h-fit min-h-fit opacity-60 flex-1\">\n            {formatDate(comment.createdAt)}\n          </div>\n          <div className=\"sm:flex hidden\">\n            <CommentActions />\n          </div>\n        </div>\n\n        <div className=\"flex flex-col\">\n          {editing ? (\n            <div className=\"flex flex-col\">\n              <textarea\n                autoFocus\n                key=\"edit\"\n                rows={4}\n                className=\"opacity-70 resize-none w-100 border-2 border-primary-moderate-blue rounded-md mb-2\"\n                value={`${\n                  comment.replyingTo ? `@${comment.replyingTo} ${text}` : text\n                }`}\n                onChange={(e) =>{\n                  setText(\n                    comment.replyingTo\n                    ? e.target.value.substring(comment.replyingTo.length + 2)\n                    : e.target.value\n                    );\n                  }}\n                  onFocus={function (e) {\n                    var val = e.target.value;\n                    e.target.value = \"\";\n                    e.target.value = val;\n                  }}\n                  />\n              <button\n                className=\"bg-primary-moderate-blue text-white w-36 h-12 rounded-lg hover:opacity-50 self-end\"\n                onClick={() => {\n                  updateComment(comment.id, { content: text });\n                  setEditing(false);\n                }}\n                >\n                UPDATE\n              </button>\n            </div>\n          ) : comment.content ? (\n            <div className=\"opacity-70\">\n              {comment.replyingTo && (\n                <div className=\"font-semibold text-primary-bright-blue contents\">\n                  @{comment.replyingTo}{\" \"}\n                </div>\n              )}\n              {comment.content}\n            </div>\n          ) : (\n            <div className=\"flex flex-col\">\n              <textarea\n                key=\"reply\"\n                rows={4}\n                className=\"opacity-70 resize-none w-100 border-2 border-primary-moderate-blue rounded-md mb-2\"\n                value={`${\n                  comment.replyingTo ? `@${comment.replyingTo} ${text}` : text\n                }`}\n                onChange={(e) => {\n                  setText(\n                    e.target.value.substring(comment.replyingTo.length + 2)\n                    );\n                  }}\n                  onFocus={function (e) {\n                    var val = e.target.value;\n                    e.target.value = \"\";\n                    e.target.value = val;\n                  }}\n                  />\n              <button\n                className=\"bg-primary-moderate-blue text-white w-36 h-12 rounded-lg hover:opacity-50 self-end\"\n                onClick={() => updateComment(comment.id, { content: text })}\n                >\n                REPLY\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n      <DeleteCommentModal\n        open={modalOpen}\n        comment={comment}\n        setOpen={setModalOpen}\n        handleDelete={deleteComment}\n        />\n    </div>\n\n  \n    {/* the movie content goes here */}\n    \n    </>\n  );\n}\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/delete.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/edit.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/reply.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/plus.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/minus.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/detailPage/moviedetails.tsx",["487","488","489","490","491","492","493","494","495","496","497","498"],[],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport FetchSingleMovieDetails from '../../hooks/detailMovie';\nimport WhatsappSvg from '../../components/icons/whatsapp';\nimport FacebookSvg from '../../components/icons/facebook';\nimport TwitterSvg from '../../components/icons/twitter';\nimport InstagramSvg from '../../components/icons/telegram';\nimport SnapSvg from '../../components/icons/snap';\nimport LinkedInSvg from '../../components/icons/linkedIn';\nimport DatabaseSvg from '../../components/icons/database';\nimport InteractiveCommentsSection from './InteractiveCommentsSection';\nimport FetchTrendsQuery from '../../hooks/getAllTrends';\nimport FetchPaginateUpComingQuery from '../../hooks/pagenateUpcoming';\nimport WatchSvg from '../../components/icons/watch';\nimport { Link } from 'react-router-dom';\nimport WatchError from '../../components/error/watchError';\nimport MovieSvg from '../../components/icons/movie';\n\n\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [currentPage, setCurrentPage] = useState(1);\n  const iconstyle = 'bg-yellow-600 w-[130px] h-[32px] rounded-lg pl-[52px] ml-2'\n  const radioStyle = 'mb-2 ml-4 border border-[#605f62] w-auto rounded-lg px-2 py-1 text-[#605f62]'\n\n  const { data: movie, isError, error } = FetchSingleMovieDetails(movieId);\n  const { data, isLoading, isError:errorMessage } = FetchPaginateUpComingQuery(currentPage);\n  const { data: Movies } = FetchTrendsQuery();\n  const moviesData = data?.data || [];\n  const [showError, setShowError] = useState(false)\n  const [clearError, setClearError] = useState(false)\n\n  const handleControl = () => {\n    setShowError((prevShowError) => !prevShowError);\n  };\n\n  const handleClear = () => {\n    setShowError(false);\n  };\n\n  return (\n    <>\n      {movie && (\n        \n        <div key={movie.id} className=\"flex items-center justify-center\"\n        style={{\n            backgroundImage:`linear-gradient(to top, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.35)), url(https://image.tmdb.org/t/p/w500/${movie.poster_path})`,\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundRepeat:'no-repeat'\n        }}>\n          <div className=\"w-full max-w-screen h-auto\"\n          >\n          \n                <div className=\"relative\">\n\n                   <div\n                        className=\"absolute inset-0 flex items-center justify-center pt-[350px]\"\n                        style={{ boxShadow: '0px 4px 6px rgba(0, 0, 0, 0.1)'}}\n                        >\n                             {showError ? \n                                <WatchError HandleClick={handleClear}/>\n                                   : !showError ?\n                                    <div className='w-[50px]'>\n                                        <button onClick={handleControl}>\n                                          <WatchSvg/>\n                                        </button>\n                                    </div> : '' \n                            }\n                          \n                    </div>\n                </div>\n                <div className=\"pl-[400px] py-4 flex text-center mt-[600px]\">\n               \n                    <div className={radioStyle}>\n                        <input type=\"radio\" className= 'bg-[#605f62]  rounded checked:bg-blue-500'/>\n                        <label htmlFor=\"okay\" className='pl-1 text-[#605f62]'>Auto Play</label>\n                    </div>\n                    <div className={radioStyle}>\n                        <input type=\"radio\" className= 'bg-[#605f62]'/>\n                        <label htmlFor=\"okay\" className='pl-1 text-[#605f62]'>Auto Play</label>\n                    </div>\n                    <div className={radioStyle}>\n                        <input type=\"radio\" className= 'bg-[#605f62]'/>\n                        <label htmlFor=\"okay\" className='pl-1 text-[#605f62]'>Auto Play</label>\n                    </div>\n                    <div className={radioStyle}>\n                        <input type=\"radio\" className= 'bg-[#605f62]'/>\n                        <label htmlFor=\"okay\" className='pl-1 text-[#605f62]'>Auto Play</label>\n                    </div>\n                    <div className={radioStyle}>\n                        <input type=\"radio\" className= 'bg-[#605f62]'/>\n                        <label htmlFor=\"okay\" className='pl-1 text-[#605f62]'>Auto Play</label>\n                    </div>\n                </div>\n                <div className='flex pl-[300px]'>\n                    <button className='bg-green-600 w-[130px] h-[32px] rounded-lg pl-[52px] ml-2'>\n                    <WhatsappSvg />\n                    </button>\n                    <button className='bg-blue-600 w-[130px] h-[32px] rounded-lg pl-[52px] ml-2'>\n                    <FacebookSvg/>\n                    </button>\n                    <button className='bg-blue-400 w-[130px] h-[32px] rounded-lg pl-[52px] ml-2'>\n                    <TwitterSvg />\n                    </button>\n                    <button className='bg-orange-600 w-[130px] h-[32px] rounded-lg pl-[52px] ml-2'>\n                        <InstagramSvg/>\n                    </button>\n                    <button className='bg-red-600 w-[130px] h-[32px] rounded-lg pl-[52px] ml-2'>\n                    <SnapSvg />\n                    </button>\n                    <button className='bg-blue-600 w-[130px] h-[32px] rounded-lg pl-[52px] ml-2'>\n                    <LinkedInSvg />\n                    </button>\n\n                </div>\n                <div className='px-8'>\n                    <p className='text-[#605f62] text-center pt-8'>If current server doesn't work please try other servers below.</p>\n                </div>\n                <div className='pt-4 w-full flex pl-[85px]'>\n                    <button className='ml-[400px] text-[#3D3C3F] font-semibold w-[120px] text-center border border-[#605f62] outline-1  rounded-lg mb-1 hover:bg-radientColor hover:border-2 hover:border-[#605f62] hover:text-white'>\n                                <h4>\n                                    Vidstream\n                                </h4>\n                                <p className='flex pl-6 hover:text-[#3D3C3F] hover:cursor-pointer'>\n                                    <DatabaseSvg/>\n                                    <span>server</span>\n                                </p>\n                    </button>\n                  \n                    <button className='ml-[5px] hover:cursor-pointer text-[#3D3C3F] font-semibold w-[120px] text-center border border-[#605f62] outline-white  rounded-lg mb-1 hover:bg-radientColor hover:border-2 hover:border-[#605f62] hover:text-white'>\n                        <h4>\n                            Vidstream\n                        </h4>\n                        <p className='flex pl-6 hover:text-[#3D3C3F] hover:cursor-pointer'>\n                            <DatabaseSvg/>\n                            <span className='hover:text-[#3D3C3F]'>server</span>\n                        </p>\n                    </button>\n                    <button className='ml-[5px] hover:cursor-pointer text-[#3D3C3F] font-semibold w-[120px] text-center border border-[#605f62] outline-1  rounded-lg mb-1 hover:bg-radientColor hover:border-2 hover:border-[#605f62] hover:text-white'>\n                        <h4>\n                            Vidstream\n                        </h4>\n                        <p className='flex pl-6 hover:text-[#3D3C3F] hover:cursor-pointer'>\n                            <DatabaseSvg/>\n                            <span className='hover:text-[#4d4d4d]'>server</span>\n                             \n                        </p>\n                    </button>\n                    <button className='ml-[5px] hover:cursor-pointer text-[#4d4d4d] font-semibold w-[120px] text-center border border-[#605f62] outline-1  rounded-lg mb-1 hover:bg-radientColor hover:border-2 hover:border-[#605f62] hover:text-white'>\n                        <h4>\n                            Vidstream\n                        </h4>\n                        <p className='flex pl-6 hover:text-[#3D3C3F] hover:cursor-pointer'>\n                            <DatabaseSvg/>\n                            <span className='hover:text-[#4d4d4d]'>server</span>\n                        </p>\n                    </button>    \n                   \n\n                </div>\n          </div>\n        </div>\n      \n      )}\n        {/* the next content goes here */}\n        <div className='flex flex-wrap bg-black'>\n                <div className='w-[995px] pt-4  border-solid divide-blue-200 bg-black '>\n                    {/* content */}\n                                            <div className='flex pl-2 mb-1 pb-6 border-2 rounded-lg relative border-solid bg-black border-[#605f6249]'>\n                                                    <div className=\"absolute top-0 right-0\">\n                                                        <p className=\"bg-red-500 text-white px-2 py-1 rounded-lg\">Text</p>\n                                                    </div>\n                                                <img src={`https://image.tmdb.org/t/p/w500/${movie && movie.poster_path}`} className='h-[300px] w-[290px] top-0 rounded' alt=\"\" />\n                                            <div className='pl-2 pt-4 bottom-0 text-white'>\n                                                \n                                                    <h1 className='pl-4 text-4xl font-extrabold pb-4'>{movie && movie.title}</h1>\n                                                    <ul className='flex text-white pl-4 pb-4'>\n                                                        <li className='pr-2'>HD</li>\n                                                        <li className='pr-2'>{movie && movie.iso_3166_1}</li>\n                                                        <li className='pr-2'>{movie && movie.vote_average}</li>\n                                                        <li className='pr-2'>{movie && movie.vote_count}</li>\n                                                        <li className='pr-2'>{movie && movie.runtime}</li>\n                                                    </ul>\n                                                        <p className='text-white pl-4 pb-4'>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Commodi, ducimus. Eos ipsam atque similique perferendis, a\n                                                        t ullam ea nulla dicta odio maiores sed.</p>\n                                                    <div className=\"flex text-white\">\n                                                        <div className=\"bg-black pr-4 pl-4\">\n                                                            <p>Country: </p>\n                                                            <p>Type: </p>\n                                                            <p>Release: </p>\n                                                            <p>HomePage: </p>\n                                                            <p>Tag:</p>\n                                                        </div>\n                                                        <div className=\"bg-black pl-4\">\n                                                            \n                                                            <p>{movie && movie.production_countries[0].name}</p>\n                                                            <p>{movie && movie.genres[0].name}</p>            \n                                                            <p>\n                                                           {movie && movie.release_date}\n                                                            </p>\n                                                            <p>{ movie && movie.homepage }</p>\n                                                            <p>{ movie && movie.overview.slice(0,120).concat('.....')}</p>\n                                                        </div>\n                                                    </div>\n                                            </div>\n                                            </div>\n            </div>\n            <div className=' rounded-lg w-[22%] bg-black text-white  ml-[62px] mt-4 border mb-1 border-[#605f6268]'>\n                <div className='pt-2 text-center border border-[#605f624d] '>\n                    <p>Movie Files</p>\n                </div>\n            </div>\n      </div>\n       \n        {/* the movie content goes here */}\n    \n\n        <div className=\"flex flex-wrap bg-black\">\n                <div className='w-[75%]'>\n                   \n                <InteractiveCommentsSection/>             \n                </div>\n                <div className=\"h-full w-1/4 bg-black\">\n                    {/* Place your text content here */}\n                    <div className='flex pt-[90px] pl-[4px] font-extrabold'>\n                        <p className='pl-0 text-white font-extrabold text-[24px]'>RECOMMENDED</p>\n                        <div className=' ml-10 text-center pl-[50px]'>\n                        </div>\n\n                    </div>\n\n                    {/* The code on the update part */}\n                    <div className='pl-[5px] pt-[15px] '>\n                        {/* {thumbnailUrls.slice(0,7).map((uri, index)=>( */}\n                        { moviesData && moviesData.slice(0,13).map((movie:any)=>(\n                            <Link to={`/movie/${movie.id}`}>\n                                <div className={`flex-col w-[280px] h-[70px] mt-[2px] bg-[#020916] text-white hover:bg-cardRadient  border-2 border-zinc-700 border-solid rounded-md ${movie[0] ? 'mt-[30' : ''}`}>\n                                        <div className='flex'>\n                                                <img src={`https://image.tmdb.org/t/p/w500/${ movie.poster_path}`} alt=\"\" \n                                                className='w-10 h-[60px] md:32 pl-2 pt-2 rounded-md text-center'/>\n                                                <p className='pt-2 pl-2 truncate'>{movie.title}</p>    \n                                        </div>\n                                    </div>\n                            </Link>\n                        ))}\n                    </div>\n                </div>\n        </div>                \n        \n\n      \n                        \n    </>\n  );\n}\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/detailPage/InteractiveCommentsSection.tsx",["499"],[],"import React from \"react\";\nimport CommentCard from \"../../components/layouts/comments/commentCard\";\nimport NewCommentCard from \"../../components/layouts/comments/mentions/NewCommentCard\";\nimport commentsData from '../../assets/data.json'\n\n\ninterface User {\n  username: string;\n  // Add any other properties related to the user object\n}\n\ninterface Comment {\n  id: number;\n  parentId?: number;\n  content: string;\n  createdAt: number;\n  replyingTo?: string;\n  score: number;\n  user: User;\n  replies: Comment[];\n}\n\ninterface InteractiveCommentsSectionProps {\n  // Add any props if required\n}\n\nconst InteractiveCommentsSection: React.FC<InteractiveCommentsSectionProps> = () => {\n  const { comments: commentsExternal, currentUser } = commentsData;\n  const [comments, setComments] = React.useState<Comment[]>(commentsExternal);\n\n  const getNewId = (): number => {\n    const replies = comments\n      .filter((comment) => comment.replies && comment.replies.length > 0)\n      .map((comment) => comment.replies);\n    const ids = comments.concat(...replies).map((comment) => comment.id);\n\n    const maxId = Math.max(...ids);\n    return maxId + 1;\n  };\n\n  const addComment = (content: string): void => {\n    const newId = getNewId();\n    const commentData: Comment = {\n      id: newId,\n      content,\n      createdAt: +new Date() / 1000,\n      replies: [],\n      score: 0,\n      user: currentUser,\n    };\n\n    setComments([...comments, commentData]);\n  };\n\n  const updateComment = (commentId: number, data: any): void => {\n    const { content, score, updateReply, addReply, replyingTo, replies } = data;\n    const updatedComments = [...comments];\n\n    if (updateReply) {\n      const commentIndex = updatedComments.findIndex(\n        (comment) =>\n          comment.replies &&\n          comment.replies.length > 0 &&\n          comment.replies.find((reply) => reply.id === commentId)\n      );\n\n      const replyIndex = updatedComments[commentIndex].replies.findIndex(\n        (reply) => reply.id === commentId\n      );\n\n      if (content) {\n        updatedComments[commentIndex].replies[replyIndex].content = content;\n      }\n\n      if (score) {\n        updatedComments[commentIndex].replies[replyIndex].score = score;\n      }\n    } else if (addReply) {\n      const newId = getNewId();\n\n      const replyData: Comment = {\n        parentId: replyingTo.id,\n        id: newId,\n        content: content || \"\",\n        createdAt: +new Date() / 1000,\n        replyingTo: replyingTo.username,\n        score: 0,\n        user: currentUser,\n        replies: [],\n      };\n\n      updatedComments.forEach((comment) => {\n        if (comment.id === commentId || comment.id === replyingTo.id) {\n          comment.replies = [...comment.replies, replyData];\n        }\n      });\n      setComments(updatedComments);\n    } else {\n      const index = comments.findIndex((comment) => comment.id === commentId);\n\n      if (content) {\n        updatedComments[index].content = content;\n      }\n\n      if (score) {\n        updatedComments[index].score = score;\n      }\n    }\n\n    setComments(updatedComments);\n  };\n\n  const deleteComment = (commentId: number, parentId?: number): void => {\n    let updatedComments = [...comments];\n\n    if (parentId) {\n      const commentIndex = updatedComments.findIndex(\n        (comment) => comment.id === parentId\n      );\n\n      const filteredReplies = updatedComments[commentIndex].replies.filter(\n        (reply) => reply.id !== commentId\n      );\n\n      updatedComments[commentIndex].replies = filteredReplies;\n    } else {\n      const filtered = updatedComments.filter(\n        (comment) => comment.id !== commentId\n      );\n      updatedComments = filtered;\n    }\n\n    setComments(updatedComments);\n  };\n\n  return (\n    <>\n      <div className=\"interactive-comments-section pt-24 sm:px-24 px-8 bg-black h-full py-12 flex flex-col\">\n      <p className='text-white font-extrabold text-2xl pb-4'>Comments</p>\n       \n\n        {comments.map((comment) => (\n          <React.Fragment key={comment.id}>\n            <CommentCard\n              key={`${comment.id} ${comment.user.username}`}\n              comment={comment}\n              currentUser={currentUser}\n              updateComment={updateComment}\n              deleteComment={deleteComment}\n            />\n            {comment.replies && comment.replies.length > 0 && (\n              <div className=\" sm:pl-10 sm:ml-10 ml-0 mb-4 pl-5\">\n                {comment.replies.map((reply) => (\n                  <CommentCard\n                    key={`${reply.id} ${reply.user.username}`}\n                    comment={reply}\n                    currentUser={currentUser}\n                    updateComment={(replyId:any, data:any) => {\n                      updateComment(replyId, {\n                        updateReply: !data.addReply,\n                        ...data,\n                      });\n                    }}\n                    deleteComment={deleteComment}\n                  />\n                ))}\n              </div>\n            )}\n          </React.Fragment>\n        ))}\n\n        <NewCommentCard currentUser={currentUser} onAdd={addComment} />\n      </div>\n    </>\n  );\n};\n\nexport default InteractiveCommentsSection;\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/layouts/comments/mentions/NewCommentCard.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/layouts/comments/mentions/DeleteCommentModal.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/search.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/watch/watchMovie.tsx",["500","501"],[],"import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport FetchSingleMovieDetails from '../../hooks/detailMovie'\nimport { Link } from 'react-router-dom'\n\nimport MovieSvg from '../../components/icons/movie'\nconst  WatchMovie=({movieId}:{movieId:any})=>{\n\n    \n    const { data:movie,isError:errorMessage } = FetchSingleMovieDetails(movieId)\n  return (\n    <>\n    \n        <div className=\"max-w-[320px] p-6   rounded-t-lg shadow dark:bg-gray-800 dark:border-gray-700 bg-[#141a23]\">\n            <div className='bg-[#141a23]'>\n                <div className='flex'>\n                    <p className=\"mb-2 text-xl font-bold tracking-tight text-white \">{movie && movie.title}</p>\n                </div>\n                <div className='flex'>\n                    <p className='text-dirt bg-[#605f62] text-center w-8 rounded-md text-sm'>HD</p>\n                    <p className='text-[#605f62] text-center text-sm pl-1'>{movie && movie.vote_average}</p>\n                    <p className='text-[#605f62] text-sm pl-1'>{movie && movie.vote_average}</p>\n                    <p className='text-[#605f62] pl-2 text-sm truncate'>{movie && movie.release_date}</p>\n                </div>\n            </div>\n        </div>\n        <div className=\"max-w-[320px] p-6 rounded-b-lg shadow dark:bg-gray-800 dark:border-gray-700 bg-[#2c343d]\">\n            <div className=''>\n                <div className='flex'>\n                    <p className=\"mb-2 text-sm font-normal tracking-tight text-[#605f62] dark:text-white leading-4 truncate\">{movie && movie.overview}</p>\n                </div>\n                    {/* <p className='text-[#605f62] text-center w-8 rounded-md text-sm flex'>Country: <span className='text-[#c1c0c4] text-sm w-8 pl-1 font-normal'>{movie && movie.production_companies[0].name}</span></p> */}\n                    <p className='text-[#605f62] text-center w-8 rounded-md text-sm flex'>Genre: <span className='text-[#c1c0c4] text-sm w-8 pl-1 font-normal'>{movie && movie.genres[0].name}</span></p>\n                    <p className='text-[#605f62]'>Scores: {movie && movie.vote_average}</p>\n            </div>\n            <Link className=\"inline-flex  justify-center w-[250px] ml-[9px] items-center px-4 py-2 text-sm font-medium text-center text-black bg-[#ffae06] rounded-lg hover:bg-yellow-500 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n            to={`/movie/${movieId}`} \n            >\n                Watch Now \n                <span className='w-10 pl-2'>\n                <MovieSvg/>\n                </span>\n            </Link>  \n            \n        </div>\n \n    </>\n  )\n}\n\nexport default WatchMovie\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/watch.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/error/watchError.tsx",["502","503","504"],[],"import { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport MovieSvg from \"../icons/movie\"\nimport CloseMovieSvg from \"../icons/closeMovie\"\n\nexport default function WatchError({HandleClick}:{HandleClick:any}) {\n    \n  return (\n    <>\n    <div className=\"max-w-[350px] p-6  rounded-t-lg shadow dark:bg-gray-800 dark:border-gray-700 bg-[#141a23]\">\n            <div className='text-center text-white pb-4'>\n            <p >Sorry You can't play this video for now</p>\n            </div>\n            <button onClick={HandleClick} className=\"inline-flex mt-4 mb-4 justify-center w-[250px] ml-[9px] items-center px-4 py-2 text-sm font-medium text-center text-black bg-[#ffae06] rounded-lg hover:bg-yellow-500 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">\n                close Video\n                  <CloseMovieSvg/>\n            </button>  \n        </div>\n    </>\n  )\n}\n","/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/movie.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/closeMovie.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/singleMovie.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/hooks/searchMovie.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/year.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/HomePage/HomeDisplay.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/star.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/components/icons/star-solid.tsx",[],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/pages/NewReleased/MewReleased.tsx",["505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520"],[],"/Users/teyemichael/Desktop/code/react/Movie/movie/app/src/auth/logout.tsx",["521","522","523"],[],{"ruleId":"524","severity":1,"message":"525","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":25},{"ruleId":"524","severity":1,"message":"528","line":4,"column":8,"nodeType":"526","messageId":"527","endLine":4,"endColumn":20},{"ruleId":"524","severity":1,"message":"529","line":5,"column":8,"nodeType":"526","messageId":"527","endLine":5,"endColumn":15},{"ruleId":"524","severity":1,"message":"530","line":6,"column":8,"nodeType":"526","messageId":"527","endLine":6,"endColumn":19},{"ruleId":"524","severity":1,"message":"531","line":7,"column":8,"nodeType":"526","messageId":"527","endLine":7,"endColumn":34},{"ruleId":"524","severity":1,"message":"532","line":13,"column":12,"nodeType":"526","messageId":"527","endLine":13,"endColumn":17},{"ruleId":"533","severity":1,"message":"534","line":93,"column":21,"nodeType":"535","endLine":93,"endColumn":125},{"ruleId":"524","severity":1,"message":"536","line":1,"column":8,"nodeType":"526","messageId":"527","endLine":1,"endColumn":13},{"ruleId":"524","severity":1,"message":"537","line":2,"column":17,"nodeType":"526","messageId":"527","endLine":2,"endColumn":26},{"ruleId":"524","severity":1,"message":"525","line":2,"column":28,"nodeType":"526","messageId":"527","endLine":2,"endColumn":36},{"ruleId":"524","severity":1,"message":"538","line":74,"column":30,"nodeType":"526","messageId":"527","endLine":74,"endColumn":39},{"ruleId":"524","severity":1,"message":"539","line":74,"column":41,"nodeType":"526","messageId":"527","endLine":74,"endColumn":45},{"ruleId":"524","severity":1,"message":"532","line":12,"column":10,"nodeType":"526","messageId":"527","endLine":12,"endColumn":15},{"ruleId":"533","severity":1,"message":"534","line":122,"column":13,"nodeType":"535","endLine":122,"endColumn":117},{"ruleId":"524","severity":1,"message":"540","line":8,"column":30,"nodeType":"526","messageId":"527","endLine":8,"endColumn":46},{"ruleId":"524","severity":1,"message":"541","line":8,"column":47,"nodeType":"526","messageId":"527","endLine":8,"endColumn":51},{"ruleId":"542","severity":1,"message":"543","line":54,"column":25,"nodeType":"535","endLine":58,"endColumn":27},{"ruleId":"533","severity":1,"message":"534","line":70,"column":21,"nodeType":"535","endLine":70,"endColumn":55},{"ruleId":"533","severity":1,"message":"534","line":73,"column":21,"nodeType":"535","endLine":73,"endColumn":55},{"ruleId":"533","severity":1,"message":"534","line":76,"column":21,"nodeType":"535","endLine":76,"endColumn":55},{"ruleId":"533","severity":1,"message":"534","line":79,"column":21,"nodeType":"535","endLine":79,"endColumn":55},{"ruleId":"524","severity":1,"message":"544","line":15,"column":8,"nodeType":"526","messageId":"527","endLine":15,"endColumn":18},{"ruleId":"524","severity":1,"message":"529","line":16,"column":8,"nodeType":"526","messageId":"527","endLine":16,"endColumn":15},{"ruleId":"524","severity":1,"message":"545","line":22,"column":10,"nodeType":"526","messageId":"527","endLine":22,"endColumn":20},{"ruleId":"524","severity":1,"message":"546","line":28,"column":9,"nodeType":"526","messageId":"527","endLine":28,"endColumn":24},{"ruleId":"524","severity":1,"message":"547","line":32,"column":9,"nodeType":"526","messageId":"527","endLine":32,"endColumn":23},{"ruleId":"524","severity":1,"message":"525","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":25},{"ruleId":"524","severity":1,"message":"548","line":5,"column":10,"nodeType":"526","messageId":"527","endLine":5,"endColumn":29},{"ruleId":"524","severity":1,"message":"549","line":7,"column":11,"nodeType":"526","messageId":"527","endLine":7,"endColumn":16},{"ruleId":"524","severity":1,"message":"550","line":20,"column":16,"nodeType":"526","messageId":"527","endLine":20,"endColumn":22},{"ruleId":"524","severity":1,"message":"551","line":20,"column":24,"nodeType":"526","messageId":"527","endLine":20,"endColumn":33},{"ruleId":"524","severity":1,"message":"552","line":20,"column":35,"nodeType":"526","messageId":"527","endLine":20,"endColumn":42},{"ruleId":"524","severity":1,"message":"553","line":22,"column":10,"nodeType":"526","messageId":"527","endLine":22,"endColumn":20},{"ruleId":"524","severity":1,"message":"551","line":32,"column":11,"nodeType":"526","messageId":"527","endLine":32,"endColumn":20},{"ruleId":"524","severity":1,"message":"554","line":32,"column":30,"nodeType":"526","messageId":"527","endLine":32,"endColumn":48},{"ruleId":"524","severity":1,"message":"538","line":32,"column":50,"nodeType":"526","messageId":"527","endLine":32,"endColumn":59},{"ruleId":"524","severity":1,"message":"555","line":32,"column":67,"nodeType":"526","messageId":"527","endLine":32,"endColumn":73},{"ruleId":"524","severity":1,"message":"556","line":4,"column":8,"nodeType":"526","messageId":"527","endLine":4,"endColumn":24},{"ruleId":"533","severity":1,"message":"534","line":28,"column":33,"nodeType":"535","endLine":28,"endColumn":44},{"ruleId":"524","severity":1,"message":"557","line":3,"column":8,"nodeType":"526","messageId":"527","endLine":3,"endColumn":15},{"ruleId":"524","severity":1,"message":"551","line":10,"column":12,"nodeType":"526","messageId":"527","endLine":10,"endColumn":21},{"ruleId":"524","severity":1,"message":"554","line":10,"column":31,"nodeType":"526","messageId":"527","endLine":10,"endColumn":49},{"ruleId":"524","severity":1,"message":"538","line":10,"column":51,"nodeType":"526","messageId":"527","endLine":10,"endColumn":60},{"ruleId":"524","severity":1,"message":"545","line":12,"column":12,"nodeType":"526","messageId":"527","endLine":12,"endColumn":22},{"ruleId":"524","severity":1,"message":"558","line":14,"column":12,"nodeType":"526","messageId":"527","endLine":14,"endColumn":23},{"ruleId":"524","severity":1,"message":"559","line":17,"column":11,"nodeType":"526","messageId":"527","endLine":17,"endColumn":27},{"ruleId":"524","severity":1,"message":"557","line":3,"column":8,"nodeType":"526","messageId":"527","endLine":3,"endColumn":15},{"ruleId":"524","severity":1,"message":"551","line":9,"column":12,"nodeType":"526","messageId":"527","endLine":9,"endColumn":21},{"ruleId":"524","severity":1,"message":"554","line":9,"column":31,"nodeType":"526","messageId":"527","endLine":9,"endColumn":49},{"ruleId":"524","severity":1,"message":"538","line":9,"column":51,"nodeType":"526","messageId":"527","endLine":9,"endColumn":60},{"ruleId":"524","severity":1,"message":"545","line":11,"column":12,"nodeType":"526","messageId":"527","endLine":11,"endColumn":22},{"ruleId":"524","severity":1,"message":"558","line":12,"column":12,"nodeType":"526","messageId":"527","endLine":12,"endColumn":23},{"ruleId":"524","severity":1,"message":"559","line":14,"column":11,"nodeType":"526","messageId":"527","endLine":14,"endColumn":27},{"ruleId":"524","severity":1,"message":"557","line":3,"column":8,"nodeType":"526","messageId":"527","endLine":3,"endColumn":15},{"ruleId":"524","severity":1,"message":"551","line":10,"column":12,"nodeType":"526","messageId":"527","endLine":10,"endColumn":21},{"ruleId":"524","severity":1,"message":"554","line":10,"column":31,"nodeType":"526","messageId":"527","endLine":10,"endColumn":49},{"ruleId":"524","severity":1,"message":"538","line":10,"column":51,"nodeType":"526","messageId":"527","endLine":10,"endColumn":60},{"ruleId":"524","severity":1,"message":"545","line":12,"column":12,"nodeType":"526","messageId":"527","endLine":12,"endColumn":22},{"ruleId":"524","severity":1,"message":"558","line":13,"column":12,"nodeType":"526","messageId":"527","endLine":13,"endColumn":23},{"ruleId":"524","severity":1,"message":"559","line":15,"column":11,"nodeType":"526","messageId":"527","endLine":15,"endColumn":27},{"ruleId":"524","severity":1,"message":"560","line":5,"column":22,"nodeType":"526","messageId":"527","endLine":5,"endColumn":40},{"ruleId":"524","severity":1,"message":"561","line":5,"column":50,"nodeType":"526","messageId":"527","endLine":5,"endColumn":61},{"ruleId":"524","severity":1,"message":"560","line":6,"column":22,"nodeType":"526","messageId":"527","endLine":6,"endColumn":40},{"ruleId":"524","severity":1,"message":"561","line":6,"column":50,"nodeType":"526","messageId":"527","endLine":6,"endColumn":61},{"ruleId":"524","severity":1,"message":"537","line":2,"column":17,"nodeType":"526","messageId":"527","endLine":2,"endColumn":26},{"ruleId":"524","severity":1,"message":"528","line":16,"column":8,"nodeType":"526","messageId":"527","endLine":16,"endColumn":20},{"ruleId":"524","severity":1,"message":"562","line":18,"column":8,"nodeType":"526","messageId":"527","endLine":18,"endColumn":15},{"ruleId":"524","severity":1,"message":"545","line":24,"column":10,"nodeType":"526","messageId":"527","endLine":24,"endColumn":20},{"ruleId":"524","severity":1,"message":"563","line":30,"column":14,"nodeType":"526","messageId":"527","endLine":30,"endColumn":26},{"ruleId":"524","severity":1,"message":"564","line":36,"column":9,"nodeType":"526","messageId":"527","endLine":36,"endColumn":21},{"ruleId":"524","severity":1,"message":"565","line":59,"column":17,"nodeType":"526","messageId":"527","endLine":59,"endColumn":23},{"ruleId":"524","severity":1,"message":"566","line":59,"column":36,"nodeType":"526","messageId":"527","endLine":59,"endColumn":43},{"ruleId":"567","severity":1,"message":"568","line":90,"column":22,"nodeType":"526","messageId":"569","endLine":90,"endColumn":36},{"ruleId":"567","severity":1,"message":"568","line":95,"column":22,"nodeType":"526","messageId":"569","endLine":95,"endColumn":36},{"ruleId":"567","severity":1,"message":"568","line":100,"column":22,"nodeType":"526","messageId":"569","endLine":100,"endColumn":36},{"ruleId":"567","severity":1,"message":"568","line":105,"column":22,"nodeType":"526","messageId":"569","endLine":105,"endColumn":36},{"ruleId":"567","severity":1,"message":"568","line":110,"column":22,"nodeType":"526","messageId":"569","endLine":110,"endColumn":36},{"ruleId":"567","severity":1,"message":"568","line":115,"column":22,"nodeType":"526","messageId":"569","endLine":115,"endColumn":36},{"ruleId":"567","severity":1,"message":"568","line":120,"column":22,"nodeType":"526","messageId":"569","endLine":120,"endColumn":36},{"ruleId":"524","severity":1,"message":"525","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":25},{"ruleId":"524","severity":1,"message":"570","line":2,"column":8,"nodeType":"526","messageId":"527","endLine":2,"endColumn":14},{"ruleId":"524","severity":1,"message":"525","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":25},{"ruleId":"524","severity":1,"message":"525","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":25},{"ruleId":"524","severity":1,"message":"570","line":2,"column":8,"nodeType":"526","messageId":"527","endLine":2,"endColumn":14},{"ruleId":"524","severity":1,"message":"525","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":25},{"ruleId":"524","severity":1,"message":"570","line":2,"column":8,"nodeType":"526","messageId":"527","endLine":2,"endColumn":14},{"ruleId":"524","severity":1,"message":"525","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":25},{"ruleId":"524","severity":1,"message":"570","line":2,"column":8,"nodeType":"526","messageId":"527","endLine":2,"endColumn":14},{"ruleId":"524","severity":1,"message":"525","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":25},{"ruleId":"524","severity":1,"message":"570","line":2,"column":8,"nodeType":"526","messageId":"527","endLine":2,"endColumn":14},{"ruleId":"524","severity":1,"message":"525","line":1,"column":17,"nodeType":"526","messageId":"527","endLine":1,"endColumn":25},{"ruleId":"524","severity":1,"message":"570","line":2,"column":8,"nodeType":"526","messageId":"527","endLine":2,"endColumn":14},{"ruleId":"524","severity":1,"message":"525","line":2,"column":10,"nodeType":"526","messageId":"527","endLine":2,"endColumn":18},{"ruleId":"571","severity":1,"message":"572","line":103,"column":11,"nodeType":"535","endLine":106,"endColumn":15},{"ruleId":"524","severity":1,"message":"536","line":1,"column":8,"nodeType":"526","messageId":"527","endLine":1,"endColumn":13},{"ruleId":"524","severity":1,"message":"537","line":2,"column":17,"nodeType":"526","messageId":"527","endLine":2,"endColumn":26},{"ruleId":"524","severity":1,"message":"573","line":18,"column":8,"nodeType":"526","messageId":"527","endLine":18,"endColumn":16},{"ruleId":"524","severity":1,"message":"574","line":24,"column":23,"nodeType":"526","messageId":"527","endLine":24,"endColumn":37},{"ruleId":"524","severity":1,"message":"575","line":25,"column":9,"nodeType":"526","messageId":"527","endLine":25,"endColumn":18},{"ruleId":"524","severity":1,"message":"552","line":28,"column":24,"nodeType":"526","messageId":"527","endLine":28,"endColumn":31},{"ruleId":"524","severity":1,"message":"532","line":28,"column":33,"nodeType":"526","messageId":"527","endLine":28,"endColumn":38},{"ruleId":"524","severity":1,"message":"551","line":29,"column":17,"nodeType":"526","messageId":"527","endLine":29,"endColumn":26},{"ruleId":"524","severity":1,"message":"563","line":29,"column":36,"nodeType":"526","messageId":"527","endLine":29,"endColumn":48},{"ruleId":"524","severity":1,"message":"555","line":30,"column":17,"nodeType":"526","messageId":"527","endLine":30,"endColumn":23},{"ruleId":"524","severity":1,"message":"576","line":33,"column":10,"nodeType":"526","messageId":"527","endLine":33,"endColumn":20},{"ruleId":"524","severity":1,"message":"577","line":33,"column":22,"nodeType":"526","messageId":"527","endLine":33,"endColumn":35},{"ruleId":"524","severity":1,"message":"578","line":56,"column":64,"nodeType":"526","messageId":"527","endLine":56,"endColumn":71},{"ruleId":"524","severity":1,"message":"579","line":2,"column":10,"nodeType":"526","messageId":"527","endLine":2,"endColumn":19},{"ruleId":"524","severity":1,"message":"563","line":10,"column":32,"nodeType":"526","messageId":"527","endLine":10,"endColumn":44},{"ruleId":"524","severity":1,"message":"525","line":1,"column":10,"nodeType":"526","messageId":"527","endLine":1,"endColumn":18},{"ruleId":"524","severity":1,"message":"580","line":2,"column":10,"nodeType":"526","messageId":"527","endLine":2,"endColumn":14},{"ruleId":"524","severity":1,"message":"573","line":3,"column":8,"nodeType":"526","messageId":"527","endLine":3,"endColumn":16},{"ruleId":"524","severity":1,"message":"581","line":12,"column":8,"nodeType":"526","messageId":"527","endLine":12,"endColumn":21},{"ruleId":"524","severity":1,"message":"528","line":16,"column":8,"nodeType":"526","messageId":"527","endLine":16,"endColumn":20},{"ruleId":"524","severity":1,"message":"545","line":24,"column":10,"nodeType":"526","messageId":"527","endLine":24,"endColumn":20},{"ruleId":"524","severity":1,"message":"563","line":30,"column":14,"nodeType":"526","messageId":"527","endLine":30,"endColumn":26},{"ruleId":"524","severity":1,"message":"582","line":34,"column":9,"nodeType":"526","messageId":"527","endLine":34,"endColumn":19},{"ruleId":"524","severity":1,"message":"564","line":36,"column":9,"nodeType":"526","messageId":"527","endLine":36,"endColumn":21},{"ruleId":"524","severity":1,"message":"559","line":40,"column":9,"nodeType":"526","messageId":"527","endLine":40,"endColumn":25},{"ruleId":"524","severity":1,"message":"565","line":59,"column":17,"nodeType":"526","messageId":"527","endLine":59,"endColumn":23},{"ruleId":"524","severity":1,"message":"566","line":59,"column":36,"nodeType":"526","messageId":"527","endLine":59,"endColumn":43},{"ruleId":"567","severity":1,"message":"568","line":114,"column":22,"nodeType":"526","messageId":"569","endLine":114,"endColumn":36},{"ruleId":"567","severity":1,"message":"568","line":119,"column":22,"nodeType":"526","messageId":"569","endLine":119,"endColumn":36},{"ruleId":"567","severity":1,"message":"568","line":124,"column":22,"nodeType":"526","messageId":"569","endLine":124,"endColumn":36},{"ruleId":"567","severity":1,"message":"568","line":129,"column":22,"nodeType":"526","messageId":"569","endLine":129,"endColumn":36},{"ruleId":"567","severity":1,"message":"568","line":134,"column":22,"nodeType":"526","messageId":"569","endLine":134,"endColumn":36},{"ruleId":"567","severity":1,"message":"568","line":139,"column":22,"nodeType":"526","messageId":"569","endLine":139,"endColumn":36},{"ruleId":"567","severity":1,"message":"568","line":144,"column":22,"nodeType":"526","messageId":"569","endLine":144,"endColumn":36},{"ruleId":"524","severity":1,"message":"583","line":2,"column":10,"nodeType":"526","messageId":"527","endLine":2,"endColumn":28},{"ruleId":"524","severity":1,"message":"541","line":2,"column":30,"nodeType":"526","messageId":"527","endLine":2,"endColumn":34},{"ruleId":"524","severity":1,"message":"584","line":8,"column":20,"nodeType":"526","messageId":"527","endLine":8,"endColumn":34},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'SearchLayout' is defined but never used.","'Display' is defined but never used.","'NewReleased' is defined but never used.","'InteractiveCommentsSection' is defined but never used.","'error' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is defined but never used.","'useEffect' is defined but never used.","'isSuccess' is assigned a value but never used.","'data' is assigned a value but never used.","'onIdTokenChanged' is defined but never used.","'User' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'WatchMovie' is defined but never used.","'isHovering' is assigned a value but never used.","'handleMouseOver' is assigned a value but never used.","'handleMouseOut' is assigned a value but never used.","'QueryObserverResult' is defined but never used.","'Movie' is defined but never used.","'myData' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.","'onhovering' is assigned a value but never used.","'FetchTrendingError' is assigned a value but never used.","'Movies' is assigned a value but never used.","'FetchTrendsQuery' is defined but never used.","'YearSvg' is defined but never used.","'currentPage' is assigned a value but never used.","'handlePageChange' is assigned a value but never used.","'LoadingLatestMovie' is assigned a value but never used.","'LatestError' is assigned a value but never used.","'StarSvg' is defined but never used.","'errorMessage' is assigned a value but never used.","'handleSearch' is assigned a value but never used.","'search' is assigned a value but never used.","'Loading' is assigned a value but never used.","react/style-prop-object","Style prop value must be an object","stylePropNotObject","'Loader' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'MovieSvg' is defined but never used.","'setCurrentPage' is assigned a value but never used.","'iconstyle' is assigned a value but never used.","'clearError' is assigned a value but never used.","'setClearError' is assigned a value but never used.","'replies' is assigned a value but never used.","'useParams' is defined but never used.","'Link' is defined but never used.","'ReactPaginate' is defined but never used.","'pageCounts' is assigned a value but never used.","'onAuthStateChanged' is defined but never used.","'setCurrentUser' is assigned a value but never used."]